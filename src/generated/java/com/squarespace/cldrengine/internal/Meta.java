/** AUTO-GENERATED DO NOT EDIT */

package com.squarespace.cldrengine.internal;

import com.squarespace.cldrengine.api.TimeZoneNameType;
import com.squarespace.cldrengine.api.NumberMiscPatternType;
import com.squarespace.cldrengine.api.NumberSystemCategory;
import com.squarespace.cldrengine.api.NumberSymbolType;
import com.squarespace.cldrengine.api.CurrencySpacingPattern;
import com.squarespace.cldrengine.api.CurrencySpacingPos;
import com.squarespace.cldrengine.api.EraAltType;
import com.squarespace.cldrengine.api.DayPeriodAltType;
import com.squarespace.cldrengine.api.AltType;
import com.squarespace.cldrengine.api.PluralType;
import com.squarespace.cldrengine.api.ListPatternPositionType;
import com.squarespace.cldrengine.api.RelativeTimeFieldType;
import com.squarespace.cldrengine.api.DateFieldWidthType;
import com.squarespace.cldrengine.api.DateFieldType;
import com.squarespace.cldrengine.api.FormatWidthType;
import com.squarespace.cldrengine.api.EraWidthType;
import com.squarespace.cldrengine.api.UnitType;
import com.squarespace.cldrengine.api.MetaZoneType;
import com.squarespace.cldrengine.api.RegionIdType;
import com.squarespace.cldrengine.api.ScriptIdType;
import com.squarespace.cldrengine.api.LanguageIdType;
import com.squarespace.cldrengine.api.CurrencyType;
import com.squarespace.cldrengine.api.ContextTransformFieldType;
import java.util.HashMap;

public final class Meta extends MetaBase {
  public static final KeyIndex<AltType> KEY_ALT_KEY = new KeyIndex<AltType>(new AltType[] {
    AltType.NONE,
    AltType.SHORT,
    AltType.NARROW,
    AltType.VARIANT,
    AltType.STAND_ALONE,
    AltType.LONG,
    AltType.MENU
  });

  public static final KeyIndex<DayPeriodAltType> KEY_DAY_PERIOD_ALT_KEY = new KeyIndex<DayPeriodAltType>(new DayPeriodAltType[] {
    DayPeriodAltType.NONE,
    DayPeriodAltType.CASING
  });

  public static final KeyIndex<EraAltType> KEY_ERA_ALT_KEY = new KeyIndex<EraAltType>(new EraAltType[] {
    EraAltType.NONE,
    EraAltType.SENSITIVE
  });

  public static final KeyIndex<PluralType> KEY_PLURAL_KEY = new KeyIndex<PluralType>(new PluralType[] {
    PluralType.OTHER,
    PluralType.ZERO,
    PluralType.ONE,
    PluralType.TWO,
    PluralType.FEW,
    PluralType.MANY
  });

  public static final KeyIndex<String> KEY_DAY_PERIOD = new KeyIndex<String>(new String[] {
    "noon",
    "midnight",
    "am",
    "pm",
    "morning1",
    "morning2",
    "afternoon1",
    "afternoon2",
    "evening1",
    "evening2",
    "night1",
    "night2"
  });

  public static final KeyIndex<EraWidthType> KEY_ERA_TYPE = new KeyIndex<EraWidthType>(new EraWidthType[] {
    EraWidthType.NAMES,
    EraWidthType.ABBR,
    EraWidthType.NARROW
  });

  public static final KeyIndex<String> KEY_FIELD_WIDTH = new KeyIndex<String>(new String[] {
    "abbreviated",
    "narrow",
    "short",
    "wide"
  });

  public static final KeyIndex<FormatWidthType> KEY_FORMAT_WIDTH = new KeyIndex<FormatWidthType>(new FormatWidthType[] {
    FormatWidthType.SHORT,
    FormatWidthType.MEDIUM,
    FormatWidthType.LONG,
    FormatWidthType.FULL
  });

  public static final KeyIndex<String> KEY_QUARTER = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4"
  });

  public static final KeyIndex<String> KEY_WEEKDAY = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7"
  });

  public static final KeyIndex<String> KEY_GREGORIAN_ERA = new KeyIndex<String>(new String[] {
    "0",
    "1"
  });

  public static final KeyIndex<String> KEY_GREGORIAN_MONTH = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12"
  });

  public static final KeyIndex<String> KEY_BUDDHIST_AVAILABLE_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "Bhms",
    "E",
    "EBhm",
    "EBhms",
    "EEEEd",
    "EHm",
    "EHms",
    "Ed",
    "Ehm",
    "Ehms",
    "Gy",
    "GyM",
    "GyMEEEEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "HHmm",
    "HHmmZ",
    "HHmmss",
    "Hm",
    "Hms",
    "Hmsv",
    "Hmv",
    "M",
    "MEEEEd",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEEEEd",
    "MMMMEd",
    "MMMMd",
    "MMMMdd",
    "MMMd",
    "MMMdd",
    "MMd",
    "MMdd",
    "Md",
    "d",
    "h",
    "hm",
    "hms",
    "hmsv",
    "hmv",
    "mmss",
    "ms",
    "y",
    "yM",
    "yMEd",
    "yMM",
    "yMMM",
    "yMMMEd",
    "yMMMM",
    "yMMMd",
    "yMd",
    "yQQQ",
    "yQQQQ",
    "yyyy",
    "yyyyM",
    "yyyyMEEEEd",
    "yyyyMEd",
    "yyyyMM",
    "yyyyMMM",
    "yyyyMMMEEEEd",
    "yyyyMMMEd",
    "yyyyMMMM",
    "yyyyMMMMEEEEd",
    "yyyyMMMMEd",
    "yyyyMMMMccccd",
    "yyyyMMMMd",
    "yyyyMMMd",
    "yyyyMMdd",
    "yyyyMd",
    "yyyyQQQ",
    "yyyyQQQQ"
  });

  public static final KeyIndex<String> KEY_BUDDHIST_PLURAL_FORMAT = new KeyIndex<String>(new String[] {

  });

  public static final KeyIndex<String> KEY_BUDDHIST_ERA = new KeyIndex<String>(new String[] {
    "0"
  });

  public static final KeyIndex<String> KEY_BUDDHIST_INTERVAL_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "GGGGGyM",
    "GGGGGyMEd",
    "GGGGGyMd",
    "Gy",
    "GyM",
    "GyMEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "Hm",
    "Hmv",
    "Hmvvvv",
    "Hv",
    "Hvvvv",
    "M",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEd",
    "MMMMd",
    "MMMd",
    "Md",
    "d",
    "h",
    "hm",
    "hmv",
    "hmvvvv",
    "hv",
    "hvvvv",
    "y",
    "yM",
    "yMEd",
    "yMMM",
    "yMMMEEEEd",
    "yMMMEd",
    "yMMMM",
    "yMMMMEEEEd",
    "yMMMMEd",
    "yMMMMd",
    "yMMMd",
    "yMd"
  });

  public static final KeyIndex<String> KEY_BUDDHIST_MONTH = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12"
  });

  public static final KeyIndex<String> KEY_JAPANESE_AVAILABLE_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "Bhms",
    "E",
    "EBhm",
    "EBhms",
    "EEEEd",
    "EHm",
    "EHms",
    "Ed",
    "Ehm",
    "Ehms",
    "Gy",
    "GyM",
    "GyMEEEEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "HHmm",
    "HHmmZ",
    "HHmmss",
    "Hm",
    "Hms",
    "Hmsv",
    "Hmv",
    "M",
    "MEEEEd",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEEEEd",
    "MMMMEd",
    "MMMMd",
    "MMMMdd",
    "MMMd",
    "MMMdd",
    "MMd",
    "MMdd",
    "Md",
    "d",
    "h",
    "hm",
    "hms",
    "hmsv",
    "hmv",
    "mmss",
    "ms",
    "y",
    "yM",
    "yMEd",
    "yMM",
    "yMMM",
    "yMMMEd",
    "yMMMM",
    "yMMMd",
    "yMd",
    "yQQQ",
    "yQQQQ",
    "yyyy",
    "yyyyM",
    "yyyyMEEEEd",
    "yyyyMEd",
    "yyyyMM",
    "yyyyMMM",
    "yyyyMMMEEEEd",
    "yyyyMMMEd",
    "yyyyMMMM",
    "yyyyMMMMEEEEd",
    "yyyyMMMMEd",
    "yyyyMMMMccccd",
    "yyyyMMMMd",
    "yyyyMMMd",
    "yyyyMMdd",
    "yyyyMd",
    "yyyyQQQ",
    "yyyyQQQQ"
  });

  public static final KeyIndex<String> KEY_JAPANESE_PLURAL_FORMAT = new KeyIndex<String>(new String[] {

  });

  public static final KeyIndex<String> KEY_JAPANESE_ERA = new KeyIndex<String>(new String[] {
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87",
    "88",
    "89",
    "90",
    "91",
    "92",
    "93",
    "94",
    "95",
    "96",
    "97",
    "98",
    "99",
    "100",
    "101",
    "102",
    "103",
    "104",
    "105",
    "106",
    "107",
    "108",
    "109",
    "110",
    "111",
    "112",
    "113",
    "114",
    "115",
    "116",
    "117",
    "118",
    "119",
    "120",
    "121",
    "122",
    "123",
    "124",
    "125",
    "126",
    "127",
    "128",
    "129",
    "130",
    "131",
    "132",
    "133",
    "134",
    "135",
    "136",
    "137",
    "138",
    "139",
    "140",
    "141",
    "142",
    "143",
    "144",
    "145",
    "146",
    "147",
    "148",
    "149",
    "150",
    "151",
    "152",
    "153",
    "154",
    "155",
    "156",
    "157",
    "158",
    "159",
    "160",
    "161",
    "162",
    "163",
    "164",
    "165",
    "166",
    "167",
    "168",
    "169",
    "170",
    "171",
    "172",
    "173",
    "174",
    "175",
    "176",
    "177",
    "178",
    "179",
    "180",
    "181",
    "182",
    "183",
    "184",
    "185",
    "186",
    "187",
    "188",
    "189",
    "190",
    "191",
    "192",
    "193",
    "194",
    "195",
    "196",
    "197",
    "198",
    "199",
    "200",
    "201",
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "211",
    "212",
    "213",
    "214",
    "215",
    "216",
    "217",
    "218",
    "219",
    "220",
    "221",
    "222",
    "223",
    "224",
    "225",
    "226",
    "227",
    "228",
    "229",
    "230",
    "231",
    "232",
    "233",
    "234",
    "235",
    "236"
  });

  public static final KeyIndex<String> KEY_JAPANESE_INTERVAL_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "GGGGGyM",
    "GGGGGyMEd",
    "GGGGGyMd",
    "Gy",
    "GyM",
    "GyMEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "Hm",
    "Hmv",
    "Hmvvvv",
    "Hv",
    "Hvvvv",
    "M",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEd",
    "MMMMd",
    "MMMd",
    "Md",
    "d",
    "h",
    "hm",
    "hmv",
    "hmvvvv",
    "hv",
    "hvvvv",
    "y",
    "yM",
    "yMEd",
    "yMMM",
    "yMMMEEEEd",
    "yMMMEd",
    "yMMMM",
    "yMMMMEEEEd",
    "yMMMMEd",
    "yMMMMd",
    "yMMMd",
    "yMd"
  });

  public static final KeyIndex<String> KEY_JAPANESE_MONTH = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12"
  });

  public static final KeyIndex<String> KEY_PERSIAN_AVAILABLE_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "Bhms",
    "E",
    "EBhm",
    "EBhms",
    "EEEEd",
    "EHm",
    "EHms",
    "Ed",
    "Ehm",
    "Ehms",
    "Gy",
    "GyM",
    "GyMEEEEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "HHmm",
    "HHmmZ",
    "HHmmss",
    "Hm",
    "Hms",
    "Hmsv",
    "Hmv",
    "M",
    "MEEEEd",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEEEEd",
    "MMMMEd",
    "MMMMd",
    "MMMMdd",
    "MMMd",
    "MMMdd",
    "MMd",
    "MMdd",
    "Md",
    "d",
    "h",
    "hm",
    "hms",
    "hmsv",
    "hmv",
    "mmss",
    "ms",
    "y",
    "yM",
    "yMEd",
    "yMM",
    "yMMM",
    "yMMMEd",
    "yMMMM",
    "yMMMd",
    "yMd",
    "yQQQ",
    "yQQQQ",
    "yyyy",
    "yyyyM",
    "yyyyMEEEEd",
    "yyyyMEd",
    "yyyyMM",
    "yyyyMMM",
    "yyyyMMMEEEEd",
    "yyyyMMMEd",
    "yyyyMMMM",
    "yyyyMMMMEEEEd",
    "yyyyMMMMEd",
    "yyyyMMMMccccd",
    "yyyyMMMMd",
    "yyyyMMMd",
    "yyyyMMdd",
    "yyyyMd",
    "yyyyQQQ",
    "yyyyQQQQ"
  });

  public static final KeyIndex<String> KEY_PERSIAN_PLURAL_FORMAT = new KeyIndex<String>(new String[] {

  });

  public static final KeyIndex<String> KEY_PERSIAN_ERA = new KeyIndex<String>(new String[] {
    "0"
  });

  public static final KeyIndex<String> KEY_PERSIAN_INTERVAL_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "GGGGGyM",
    "GGGGGyMEd",
    "GGGGGyMd",
    "Gy",
    "GyM",
    "GyMEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "Hm",
    "Hmv",
    "Hmvvvv",
    "Hv",
    "Hvvvv",
    "M",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEd",
    "MMMMd",
    "MMMd",
    "Md",
    "d",
    "h",
    "hm",
    "hmv",
    "hmvvvv",
    "hv",
    "hvvvv",
    "y",
    "yM",
    "yMEd",
    "yMMM",
    "yMMMEEEEd",
    "yMMMEd",
    "yMMMM",
    "yMMMMEEEEd",
    "yMMMMEd",
    "yMMMMd",
    "yMMMd",
    "yMd"
  });

  public static final KeyIndex<String> KEY_PERSIAN_MONTH = new KeyIndex<String>(new String[] {
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12"
  });

  public static final KeyIndex<DateFieldType> KEY_DATE_FIELD = new KeyIndex<DateFieldType>(new DateFieldType[] {
    DateFieldType.ERA,
    DateFieldType.YEAR,
    DateFieldType.QUARTER,
    DateFieldType.MONTH,
    DateFieldType.WEEK,
    DateFieldType.WEEKDAY,
    DateFieldType.WEEKDAYOFMONTH,
    DateFieldType.SUN,
    DateFieldType.MON,
    DateFieldType.TUE,
    DateFieldType.WED,
    DateFieldType.THU,
    DateFieldType.FRI,
    DateFieldType.SAT,
    DateFieldType.DAY,
    DateFieldType.DAYPERIOD,
    DateFieldType.HOUR,
    DateFieldType.MINUTE,
    DateFieldType.SECOND,
    DateFieldType.ZONE
  });

  public static final KeyIndex<DateFieldWidthType> KEY_DATE_FIELD_WIDTH = new KeyIndex<DateFieldWidthType>(new DateFieldWidthType[] {
    DateFieldWidthType.SHORT,
    DateFieldWidthType.NARROW,
    DateFieldWidthType.WIDE
  });

  public static final KeyIndex<RelativeTimeFieldType> KEY_RELATIVE_TIME_FIELD = new KeyIndex<RelativeTimeFieldType>(new RelativeTimeFieldType[] {
    RelativeTimeFieldType.YEAR,
    RelativeTimeFieldType.QUARTER,
    RelativeTimeFieldType.MONTH,
    RelativeTimeFieldType.WEEK,
    RelativeTimeFieldType.DAY,
    RelativeTimeFieldType.SUN,
    RelativeTimeFieldType.MON,
    RelativeTimeFieldType.TUE,
    RelativeTimeFieldType.WED,
    RelativeTimeFieldType.THU,
    RelativeTimeFieldType.FRI,
    RelativeTimeFieldType.SAT,
    RelativeTimeFieldType.HOUR,
    RelativeTimeFieldType.MINUTE,
    RelativeTimeFieldType.SECOND
  });

  public static final KeyIndex<ContextTransformFieldType> KEY_CONTEXT_TRANSFORM_FIELD = new KeyIndex<ContextTransformFieldType>(new ContextTransformFieldType[] {
    ContextTransformFieldType.CALENDAR_FIELD,
    ContextTransformFieldType.CURRENCYNAME,
    ContextTransformFieldType.DAY_FORMAT_EXCEPT_NARROW,
    ContextTransformFieldType.DAY_STANDALONE_EXCEPT_NARROW,
    ContextTransformFieldType.ERA_ABBR,
    ContextTransformFieldType.ERA_NAME,
    ContextTransformFieldType.KEYVALUE,
    ContextTransformFieldType.LANGUAGES,
    ContextTransformFieldType.MONTH_FORMAT_EXCEPT_NARROW,
    ContextTransformFieldType.MONTH_STANDALONE_EXCEPT_NARROW,
    ContextTransformFieldType.NUMBER_SPELLOUT,
    ContextTransformFieldType.RELATIVE,
    ContextTransformFieldType.SCRIPT,
    ContextTransformFieldType.TYPOGRAPHICNAMES
  });

  public static final KeyIndex<ListPatternPositionType> KEY_LIST_PATTERN_POSITION = new KeyIndex<ListPatternPositionType>(new ListPatternPositionType[] {
    ListPatternPositionType.START,
    ListPatternPositionType.MIDDLE,
    ListPatternPositionType.END,
    ListPatternPositionType.TWO
  });

  public static final KeyIndex<CurrencySpacingPattern> KEY_CURRENCY_SPACING_PATTERN = new KeyIndex<CurrencySpacingPattern>(new CurrencySpacingPattern[] {
    CurrencySpacingPattern.CURRENCYMATCH,
    CurrencySpacingPattern.SURROUNDINGMATCH,
    CurrencySpacingPattern.INSERTBETWEEN
  });

  public static final KeyIndex<CurrencySpacingPos> KEY_CURRENCY_SPACING_POS = new KeyIndex<CurrencySpacingPos>(new CurrencySpacingPos[] {
    CurrencySpacingPos.BEFORE,
    CurrencySpacingPos.AFTER
  });

  public static final KeyIndex<NumberMiscPatternType> KEY_NUMBER_MISC_PATTERN = new KeyIndex<NumberMiscPatternType>(new NumberMiscPatternType[] {
    NumberMiscPatternType.AT_LEAST,
    NumberMiscPatternType.AT_MOST,
    NumberMiscPatternType.APPROX,
    NumberMiscPatternType.RANGE
  });

  public static final KeyIndex<NumberSymbolType> KEY_NUMBER_SYMBOL = new KeyIndex<NumberSymbolType>(new NumberSymbolType[] {
    NumberSymbolType.APPROXIMATELYSIGN,
    NumberSymbolType.CURRENCYDECIMAL,
    NumberSymbolType.CURRENCYGROUP,
    NumberSymbolType.DECIMAL,
    NumberSymbolType.EXPONENTIAL,
    NumberSymbolType.GROUP,
    NumberSymbolType.INFINITY,
    NumberSymbolType.LIST,
    NumberSymbolType.MINUSSIGN,
    NumberSymbolType.NAN,
    NumberSymbolType.PERMILLE,
    NumberSymbolType.PERCENTSIGN,
    NumberSymbolType.PLUSSIGN,
    NumberSymbolType.SUPERSCRIPTINGEXPONENT,
    NumberSymbolType.TIMESEPARATOR
  });

  public static final KeyIndex<NumberSystemCategory> KEY_NUMBER_SYSTEM = new KeyIndex<NumberSystemCategory>(new NumberSystemCategory[] {
    NumberSystemCategory.DEFAULT,
    NumberSystemCategory.NATIVE,
    NumberSystemCategory.FINANCE,
    NumberSystemCategory.TRADITIONAL
  });

  public static final KeyIndex<MetaZoneType> KEY_METAZONE = new KeyIndex<MetaZoneType>(new MetaZoneType[] {
    MetaZoneType.ACRE,
    MetaZoneType.AFGHANISTAN,
    MetaZoneType.AFRICA_CENTRAL,
    MetaZoneType.AFRICA_EASTERN,
    MetaZoneType.AFRICA_SOUTHERN,
    MetaZoneType.AFRICA_WESTERN,
    MetaZoneType.ALASKA,
    MetaZoneType.ALMATY,
    MetaZoneType.AMAZON,
    MetaZoneType.AMERICA_CENTRAL,
    MetaZoneType.AMERICA_EASTERN,
    MetaZoneType.AMERICA_MOUNTAIN,
    MetaZoneType.AMERICA_PACIFIC,
    MetaZoneType.ANADYR,
    MetaZoneType.APIA,
    MetaZoneType.AQTAU,
    MetaZoneType.AQTOBE,
    MetaZoneType.ARABIAN,
    MetaZoneType.ARGENTINA,
    MetaZoneType.ARGENTINA_WESTERN,
    MetaZoneType.ARMENIA,
    MetaZoneType.ATLANTIC,
    MetaZoneType.AUSTRALIA_CENTRAL,
    MetaZoneType.AUSTRALIA_CENTRALWESTERN,
    MetaZoneType.AUSTRALIA_EASTERN,
    MetaZoneType.AUSTRALIA_WESTERN,
    MetaZoneType.AZERBAIJAN,
    MetaZoneType.AZORES,
    MetaZoneType.BANGLADESH,
    MetaZoneType.BHUTAN,
    MetaZoneType.BOLIVIA,
    MetaZoneType.BRASILIA,
    MetaZoneType.BRUNEI,
    MetaZoneType.CAPE_VERDE,
    MetaZoneType.CASEY,
    MetaZoneType.CHAMORRO,
    MetaZoneType.CHATHAM,
    MetaZoneType.CHILE,
    MetaZoneType.CHINA,
    MetaZoneType.CHOIBALSAN,
    MetaZoneType.CHRISTMAS,
    MetaZoneType.COCOS,
    MetaZoneType.COLOMBIA,
    MetaZoneType.COOK,
    MetaZoneType.CUBA,
    MetaZoneType.DAVIS,
    MetaZoneType.DUMONTDURVILLE,
    MetaZoneType.EAST_TIMOR,
    MetaZoneType.EASTER,
    MetaZoneType.ECUADOR,
    MetaZoneType.EUROPE_CENTRAL,
    MetaZoneType.EUROPE_EASTERN,
    MetaZoneType.EUROPE_FURTHER_EASTERN,
    MetaZoneType.EUROPE_WESTERN,
    MetaZoneType.FALKLAND,
    MetaZoneType.FIJI,
    MetaZoneType.FRENCH_GUIANA,
    MetaZoneType.FRENCH_SOUTHERN,
    MetaZoneType.GMT,
    MetaZoneType.GALAPAGOS,
    MetaZoneType.GAMBIER,
    MetaZoneType.GEORGIA,
    MetaZoneType.GILBERT_ISLANDS,
    MetaZoneType.GREENLAND,
    MetaZoneType.GREENLAND_EASTERN,
    MetaZoneType.GREENLAND_WESTERN,
    MetaZoneType.GUAM,
    MetaZoneType.GULF,
    MetaZoneType.GUYANA,
    MetaZoneType.HAWAII_ALEUTIAN,
    MetaZoneType.HONG_KONG,
    MetaZoneType.HOVD,
    MetaZoneType.INDIA,
    MetaZoneType.INDIAN_OCEAN,
    MetaZoneType.INDOCHINA,
    MetaZoneType.INDONESIA_CENTRAL,
    MetaZoneType.INDONESIA_EASTERN,
    MetaZoneType.INDONESIA_WESTERN,
    MetaZoneType.IRAN,
    MetaZoneType.IRKUTSK,
    MetaZoneType.ISRAEL,
    MetaZoneType.JAPAN,
    MetaZoneType.KAMCHATKA,
    MetaZoneType.KAZAKHSTAN_EASTERN,
    MetaZoneType.KAZAKHSTAN_WESTERN,
    MetaZoneType.KOREA,
    MetaZoneType.KOSRAE,
    MetaZoneType.KRASNOYARSK,
    MetaZoneType.KYRGYSTAN,
    MetaZoneType.LANKA,
    MetaZoneType.LINE_ISLANDS,
    MetaZoneType.LORD_HOWE,
    MetaZoneType.MACAU,
    MetaZoneType.MAGADAN,
    MetaZoneType.MALAYSIA,
    MetaZoneType.MALDIVES,
    MetaZoneType.MARQUESAS,
    MetaZoneType.MARSHALL_ISLANDS,
    MetaZoneType.MAURITIUS,
    MetaZoneType.MAWSON,
    MetaZoneType.MEXICO_PACIFIC,
    MetaZoneType.MONGOLIA,
    MetaZoneType.MOSCOW,
    MetaZoneType.MYANMAR,
    MetaZoneType.NAURU,
    MetaZoneType.NEPAL,
    MetaZoneType.NEW_CALEDONIA,
    MetaZoneType.NEW_ZEALAND,
    MetaZoneType.NEWFOUNDLAND,
    MetaZoneType.NIUE,
    MetaZoneType.NORFOLK,
    MetaZoneType.NORONHA,
    MetaZoneType.NORTH_MARIANA,
    MetaZoneType.NOVOSIBIRSK,
    MetaZoneType.OMSK,
    MetaZoneType.PAKISTAN,
    MetaZoneType.PALAU,
    MetaZoneType.PAPUA_NEW_GUINEA,
    MetaZoneType.PARAGUAY,
    MetaZoneType.PERU,
    MetaZoneType.PHILIPPINES,
    MetaZoneType.PHOENIX_ISLANDS,
    MetaZoneType.PIERRE_MIQUELON,
    MetaZoneType.PITCAIRN,
    MetaZoneType.PONAPE,
    MetaZoneType.PYONGYANG,
    MetaZoneType.QYZYLORDA,
    MetaZoneType.REUNION,
    MetaZoneType.ROTHERA,
    MetaZoneType.SAKHALIN,
    MetaZoneType.SAMARA,
    MetaZoneType.SAMOA,
    MetaZoneType.SEYCHELLES,
    MetaZoneType.SINGAPORE,
    MetaZoneType.SOLOMON,
    MetaZoneType.SOUTH_GEORGIA,
    MetaZoneType.SURINAME,
    MetaZoneType.SYOWA,
    MetaZoneType.TAHITI,
    MetaZoneType.TAIPEI,
    MetaZoneType.TAJIKISTAN,
    MetaZoneType.TOKELAU,
    MetaZoneType.TONGA,
    MetaZoneType.TRUK,
    MetaZoneType.TURKMENISTAN,
    MetaZoneType.TUVALU,
    MetaZoneType.URUGUAY,
    MetaZoneType.UZBEKISTAN,
    MetaZoneType.VANUATU,
    MetaZoneType.VENEZUELA,
    MetaZoneType.VLADIVOSTOK,
    MetaZoneType.VOLGOGRAD,
    MetaZoneType.VOSTOK,
    MetaZoneType.WAKE,
    MetaZoneType.WALLIS,
    MetaZoneType.YAKUTSK,
    MetaZoneType.YEKATERINBURG,
    MetaZoneType.YUKON
  });

  public static final KeyIndex<TimeZoneNameType> KEY_TIMEZONE_TYPE = new KeyIndex<TimeZoneNameType>(new TimeZoneNameType[] {
    TimeZoneNameType.DAYLIGHT,
    TimeZoneNameType.GENERIC,
    TimeZoneNameType.STANDARD
  });

  public static final KeyIndex<CurrencyType> KEY_CURRENCY_ID = new KeyIndex<CurrencyType>(new CurrencyType[] {
    CurrencyType.ADP,
    CurrencyType.AED,
    CurrencyType.AFA,
    CurrencyType.AFN,
    CurrencyType.ALK,
    CurrencyType.ALL,
    CurrencyType.AMD,
    CurrencyType.ANG,
    CurrencyType.AOA,
    CurrencyType.AOK,
    CurrencyType.AON,
    CurrencyType.AOR,
    CurrencyType.ARA,
    CurrencyType.ARL,
    CurrencyType.ARM,
    CurrencyType.ARP,
    CurrencyType.ARS,
    CurrencyType.ATS,
    CurrencyType.AUD,
    CurrencyType.AWG,
    CurrencyType.AZM,
    CurrencyType.AZN,
    CurrencyType.BAD,
    CurrencyType.BAM,
    CurrencyType.BAN,
    CurrencyType.BBD,
    CurrencyType.BDT,
    CurrencyType.BEC,
    CurrencyType.BEF,
    CurrencyType.BEL,
    CurrencyType.BGL,
    CurrencyType.BGM,
    CurrencyType.BGN,
    CurrencyType.BGO,
    CurrencyType.BHD,
    CurrencyType.BIF,
    CurrencyType.BMD,
    CurrencyType.BND,
    CurrencyType.BOB,
    CurrencyType.BOL,
    CurrencyType.BOP,
    CurrencyType.BOV,
    CurrencyType.BRB,
    CurrencyType.BRC,
    CurrencyType.BRE,
    CurrencyType.BRL,
    CurrencyType.BRN,
    CurrencyType.BRR,
    CurrencyType.BRZ,
    CurrencyType.BSD,
    CurrencyType.BTN,
    CurrencyType.BUK,
    CurrencyType.BWP,
    CurrencyType.BYB,
    CurrencyType.BYN,
    CurrencyType.BYR,
    CurrencyType.BZD,
    CurrencyType.CAD,
    CurrencyType.CDF,
    CurrencyType.CHE,
    CurrencyType.CHF,
    CurrencyType.CHW,
    CurrencyType.CLE,
    CurrencyType.CLF,
    CurrencyType.CLP,
    CurrencyType.CNH,
    CurrencyType.CNX,
    CurrencyType.CNY,
    CurrencyType.COP,
    CurrencyType.COU,
    CurrencyType.CRC,
    CurrencyType.CSD,
    CurrencyType.CSK,
    CurrencyType.CUC,
    CurrencyType.CUP,
    CurrencyType.CVE,
    CurrencyType.CYP,
    CurrencyType.CZK,
    CurrencyType.DDM,
    CurrencyType.DEM,
    CurrencyType.DJF,
    CurrencyType.DKK,
    CurrencyType.DOP,
    CurrencyType.DZD,
    CurrencyType.ECS,
    CurrencyType.ECV,
    CurrencyType.EEK,
    CurrencyType.EGP,
    CurrencyType.ERN,
    CurrencyType.ESA,
    CurrencyType.ESB,
    CurrencyType.ESP,
    CurrencyType.ETB,
    CurrencyType.EUR,
    CurrencyType.FIM,
    CurrencyType.FJD,
    CurrencyType.FKP,
    CurrencyType.FRF,
    CurrencyType.GBP,
    CurrencyType.GEK,
    CurrencyType.GEL,
    CurrencyType.GHC,
    CurrencyType.GHS,
    CurrencyType.GIP,
    CurrencyType.GMD,
    CurrencyType.GNF,
    CurrencyType.GNS,
    CurrencyType.GQE,
    CurrencyType.GRD,
    CurrencyType.GTQ,
    CurrencyType.GWE,
    CurrencyType.GWP,
    CurrencyType.GYD,
    CurrencyType.HKD,
    CurrencyType.HNL,
    CurrencyType.HRD,
    CurrencyType.HRK,
    CurrencyType.HTG,
    CurrencyType.HUF,
    CurrencyType.IDR,
    CurrencyType.IEP,
    CurrencyType.ILP,
    CurrencyType.ILR,
    CurrencyType.ILS,
    CurrencyType.INR,
    CurrencyType.IQD,
    CurrencyType.IRR,
    CurrencyType.ISJ,
    CurrencyType.ISK,
    CurrencyType.ITL,
    CurrencyType.JMD,
    CurrencyType.JOD,
    CurrencyType.JPY,
    CurrencyType.KES,
    CurrencyType.KGS,
    CurrencyType.KHR,
    CurrencyType.KMF,
    CurrencyType.KPW,
    CurrencyType.KRH,
    CurrencyType.KRO,
    CurrencyType.KRW,
    CurrencyType.KWD,
    CurrencyType.KYD,
    CurrencyType.KZT,
    CurrencyType.LAK,
    CurrencyType.LBP,
    CurrencyType.LKR,
    CurrencyType.LRD,
    CurrencyType.LSL,
    CurrencyType.LTL,
    CurrencyType.LTT,
    CurrencyType.LUC,
    CurrencyType.LUF,
    CurrencyType.LUL,
    CurrencyType.LVL,
    CurrencyType.LVR,
    CurrencyType.LYD,
    CurrencyType.MAD,
    CurrencyType.MAF,
    CurrencyType.MCF,
    CurrencyType.MDC,
    CurrencyType.MDL,
    CurrencyType.MGA,
    CurrencyType.MGF,
    CurrencyType.MKD,
    CurrencyType.MKN,
    CurrencyType.MLF,
    CurrencyType.MMK,
    CurrencyType.MNT,
    CurrencyType.MOP,
    CurrencyType.MRO,
    CurrencyType.MRU,
    CurrencyType.MTL,
    CurrencyType.MTP,
    CurrencyType.MUR,
    CurrencyType.MVP,
    CurrencyType.MVR,
    CurrencyType.MWK,
    CurrencyType.MXN,
    CurrencyType.MXP,
    CurrencyType.MXV,
    CurrencyType.MYR,
    CurrencyType.MZE,
    CurrencyType.MZM,
    CurrencyType.MZN,
    CurrencyType.NAD,
    CurrencyType.NGN,
    CurrencyType.NIC,
    CurrencyType.NIO,
    CurrencyType.NLG,
    CurrencyType.NOK,
    CurrencyType.NPR,
    CurrencyType.NZD,
    CurrencyType.OMR,
    CurrencyType.PAB,
    CurrencyType.PEI,
    CurrencyType.PEN,
    CurrencyType.PES,
    CurrencyType.PGK,
    CurrencyType.PHP,
    CurrencyType.PKR,
    CurrencyType.PLN,
    CurrencyType.PLZ,
    CurrencyType.PTE,
    CurrencyType.PYG,
    CurrencyType.QAR,
    CurrencyType.RHD,
    CurrencyType.ROL,
    CurrencyType.RON,
    CurrencyType.RSD,
    CurrencyType.RUB,
    CurrencyType.RUR,
    CurrencyType.RWF,
    CurrencyType.SAR,
    CurrencyType.SBD,
    CurrencyType.SCR,
    CurrencyType.SDD,
    CurrencyType.SDG,
    CurrencyType.SDP,
    CurrencyType.SEK,
    CurrencyType.SGD,
    CurrencyType.SHP,
    CurrencyType.SIT,
    CurrencyType.SKK,
    CurrencyType.SLE,
    CurrencyType.SLL,
    CurrencyType.SOS,
    CurrencyType.SRD,
    CurrencyType.SRG,
    CurrencyType.SSP,
    CurrencyType.STD,
    CurrencyType.STN,
    CurrencyType.SUR,
    CurrencyType.SVC,
    CurrencyType.SYP,
    CurrencyType.SZL,
    CurrencyType.THB,
    CurrencyType.TJR,
    CurrencyType.TJS,
    CurrencyType.TMM,
    CurrencyType.TMT,
    CurrencyType.TND,
    CurrencyType.TOP,
    CurrencyType.TPE,
    CurrencyType.TRL,
    CurrencyType.TRY,
    CurrencyType.TTD,
    CurrencyType.TWD,
    CurrencyType.TZS,
    CurrencyType.UAH,
    CurrencyType.UAK,
    CurrencyType.UGS,
    CurrencyType.UGX,
    CurrencyType.USD,
    CurrencyType.USN,
    CurrencyType.USS,
    CurrencyType.UYI,
    CurrencyType.UYP,
    CurrencyType.UYU,
    CurrencyType.UYW,
    CurrencyType.UZS,
    CurrencyType.VEB,
    CurrencyType.VED,
    CurrencyType.VEF,
    CurrencyType.VES,
    CurrencyType.VND,
    CurrencyType.VNN,
    CurrencyType.VUV,
    CurrencyType.WST,
    CurrencyType.XAF,
    CurrencyType.XAG,
    CurrencyType.XAU,
    CurrencyType.XBA,
    CurrencyType.XBB,
    CurrencyType.XBC,
    CurrencyType.XBD,
    CurrencyType.XCD,
    CurrencyType.XCG,
    CurrencyType.XDR,
    CurrencyType.XEU,
    CurrencyType.XFO,
    CurrencyType.XFU,
    CurrencyType.XOF,
    CurrencyType.XPD,
    CurrencyType.XPF,
    CurrencyType.XPT,
    CurrencyType.XRE,
    CurrencyType.XSU,
    CurrencyType.XTS,
    CurrencyType.XUA,
    CurrencyType.XXX,
    CurrencyType.YDD,
    CurrencyType.YER,
    CurrencyType.YUD,
    CurrencyType.YUM,
    CurrencyType.YUN,
    CurrencyType.YUR,
    CurrencyType.ZAL,
    CurrencyType.ZAR,
    CurrencyType.ZMK,
    CurrencyType.ZMW,
    CurrencyType.ZRN,
    CurrencyType.ZRZ,
    CurrencyType.ZWD,
    CurrencyType.ZWL,
    CurrencyType.ZWR
  });

  public static final KeyIndex<LanguageIdType> KEY_LANGUAGE_ID = new KeyIndex<LanguageIdType>(new LanguageIdType[] {
    LanguageIdType.AA,
    LanguageIdType.AB,
    LanguageIdType.ACE,
    LanguageIdType.ACH,
    LanguageIdType.ADA,
    LanguageIdType.ADY,
    LanguageIdType.AE,
    LanguageIdType.AEB,
    LanguageIdType.AF,
    LanguageIdType.AFH,
    LanguageIdType.AGQ,
    LanguageIdType.AIN,
    LanguageIdType.AJP,
    LanguageIdType.AK,
    LanguageIdType.AKK,
    LanguageIdType.AKZ,
    LanguageIdType.ALE,
    LanguageIdType.ALN,
    LanguageIdType.ALT,
    LanguageIdType.AM,
    LanguageIdType.AN,
    LanguageIdType.ANG,
    LanguageIdType.ANN,
    LanguageIdType.ANP,
    LanguageIdType.APC,
    LanguageIdType.AR,
    LanguageIdType.AR_001,
    LanguageIdType.ARC,
    LanguageIdType.ARN,
    LanguageIdType.ARO,
    LanguageIdType.ARP,
    LanguageIdType.ARQ,
    LanguageIdType.ARS,
    LanguageIdType.ARW,
    LanguageIdType.ARY,
    LanguageIdType.ARZ,
    LanguageIdType.AS,
    LanguageIdType.ASA,
    LanguageIdType.ASE,
    LanguageIdType.AST,
    LanguageIdType.ATJ,
    LanguageIdType.AV,
    LanguageIdType.AVK,
    LanguageIdType.AWA,
    LanguageIdType.AY,
    LanguageIdType.AZ,
    LanguageIdType.AZ_ARAB,
    LanguageIdType.BA,
    LanguageIdType.BAL,
    LanguageIdType.BAN,
    LanguageIdType.BAR,
    LanguageIdType.BAS,
    LanguageIdType.BAX,
    LanguageIdType.BBC,
    LanguageIdType.BBJ,
    LanguageIdType.BE,
    LanguageIdType.BEJ,
    LanguageIdType.BEM,
    LanguageIdType.BEW,
    LanguageIdType.BEZ,
    LanguageIdType.BFD,
    LanguageIdType.BFQ,
    LanguageIdType.BG,
    LanguageIdType.BGC,
    LanguageIdType.BGN,
    LanguageIdType.BHO,
    LanguageIdType.BI,
    LanguageIdType.BIK,
    LanguageIdType.BIN,
    LanguageIdType.BJN,
    LanguageIdType.BKM,
    LanguageIdType.BLA,
    LanguageIdType.BLO,
    LanguageIdType.BLT,
    LanguageIdType.BM,
    LanguageIdType.BN,
    LanguageIdType.BO,
    LanguageIdType.BPY,
    LanguageIdType.BQI,
    LanguageIdType.BR,
    LanguageIdType.BRA,
    LanguageIdType.BRH,
    LanguageIdType.BRX,
    LanguageIdType.BS,
    LanguageIdType.BSS,
    LanguageIdType.BUA,
    LanguageIdType.BUG,
    LanguageIdType.BUM,
    LanguageIdType.BYN,
    LanguageIdType.BYV,
    LanguageIdType.CA,
    LanguageIdType.CAD,
    LanguageIdType.CAR,
    LanguageIdType.CAY,
    LanguageIdType.CCH,
    LanguageIdType.CCP,
    LanguageIdType.CE,
    LanguageIdType.CEB,
    LanguageIdType.CGG,
    LanguageIdType.CH,
    LanguageIdType.CHB,
    LanguageIdType.CHG,
    LanguageIdType.CHK,
    LanguageIdType.CHM,
    LanguageIdType.CHN,
    LanguageIdType.CHO,
    LanguageIdType.CHP,
    LanguageIdType.CHR,
    LanguageIdType.CHY,
    LanguageIdType.CIC,
    LanguageIdType.CKB,
    LanguageIdType.CLC,
    LanguageIdType.CO,
    LanguageIdType.COP,
    LanguageIdType.CPS,
    LanguageIdType.CR,
    LanguageIdType.CRG,
    LanguageIdType.CRH,
    LanguageIdType.CRJ,
    LanguageIdType.CRK,
    LanguageIdType.CRL,
    LanguageIdType.CRM,
    LanguageIdType.CRR,
    LanguageIdType.CRS,
    LanguageIdType.CS,
    LanguageIdType.CSB,
    LanguageIdType.CSW,
    LanguageIdType.CU,
    LanguageIdType.CV,
    LanguageIdType.CWD,
    LanguageIdType.CY,
    LanguageIdType.DA,
    LanguageIdType.DAK,
    LanguageIdType.DAR,
    LanguageIdType.DAV,
    LanguageIdType.DE,
    LanguageIdType.DE_AT,
    LanguageIdType.DE_CH,
    LanguageIdType.DEL,
    LanguageIdType.DEN,
    LanguageIdType.DGR,
    LanguageIdType.DIN,
    LanguageIdType.DJE,
    LanguageIdType.DOI,
    LanguageIdType.DSB,
    LanguageIdType.DTP,
    LanguageIdType.DUA,
    LanguageIdType.DUM,
    LanguageIdType.DV,
    LanguageIdType.DYO,
    LanguageIdType.DYU,
    LanguageIdType.DZ,
    LanguageIdType.DZG,
    LanguageIdType.EBU,
    LanguageIdType.EE,
    LanguageIdType.EFI,
    LanguageIdType.EGL,
    LanguageIdType.EGY,
    LanguageIdType.EKA,
    LanguageIdType.EL,
    LanguageIdType.ELX,
    LanguageIdType.EN,
    LanguageIdType.EN_AU,
    LanguageIdType.EN_CA,
    LanguageIdType.EN_GB,
    LanguageIdType.EN_US,
    LanguageIdType.ENM,
    LanguageIdType.EO,
    LanguageIdType.ES,
    LanguageIdType.ES_419,
    LanguageIdType.ES_ES,
    LanguageIdType.ES_MX,
    LanguageIdType.ESU,
    LanguageIdType.ET,
    LanguageIdType.EU,
    LanguageIdType.EWO,
    LanguageIdType.EXT,
    LanguageIdType.FA,
    LanguageIdType.FA_AF,
    LanguageIdType.FAN,
    LanguageIdType.FAT,
    LanguageIdType.FF,
    LanguageIdType.FI,
    LanguageIdType.FIL,
    LanguageIdType.FIT,
    LanguageIdType.FJ,
    LanguageIdType.FO,
    LanguageIdType.FON,
    LanguageIdType.FR,
    LanguageIdType.FR_CA,
    LanguageIdType.FR_CH,
    LanguageIdType.FRC,
    LanguageIdType.FRM,
    LanguageIdType.FRO,
    LanguageIdType.FRP,
    LanguageIdType.FRR,
    LanguageIdType.FRS,
    LanguageIdType.FUR,
    LanguageIdType.FY,
    LanguageIdType.GA,
    LanguageIdType.GAA,
    LanguageIdType.GAG,
    LanguageIdType.GAN,
    LanguageIdType.GAY,
    LanguageIdType.GBA,
    LanguageIdType.GBZ,
    LanguageIdType.GD,
    LanguageIdType.GEZ,
    LanguageIdType.GIL,
    LanguageIdType.GL,
    LanguageIdType.GLK,
    LanguageIdType.GMH,
    LanguageIdType.GN,
    LanguageIdType.GOH,
    LanguageIdType.GOM,
    LanguageIdType.GON,
    LanguageIdType.GOR,
    LanguageIdType.GOT,
    LanguageIdType.GRB,
    LanguageIdType.GRC,
    LanguageIdType.GSW,
    LanguageIdType.GU,
    LanguageIdType.GUC,
    LanguageIdType.GUR,
    LanguageIdType.GUZ,
    LanguageIdType.GV,
    LanguageIdType.GWI,
    LanguageIdType.HA,
    LanguageIdType.HAI,
    LanguageIdType.HAK,
    LanguageIdType.HAW,
    LanguageIdType.HAX,
    LanguageIdType.HDN,
    LanguageIdType.HE,
    LanguageIdType.HI,
    LanguageIdType.HI_LATN,
    LanguageIdType.HIF,
    LanguageIdType.HIL,
    LanguageIdType.HIT,
    LanguageIdType.HMN,
    LanguageIdType.HNJ,
    LanguageIdType.HO,
    LanguageIdType.HR,
    LanguageIdType.HSB,
    LanguageIdType.HSN,
    LanguageIdType.HT,
    LanguageIdType.HU,
    LanguageIdType.HUP,
    LanguageIdType.HUR,
    LanguageIdType.HY,
    LanguageIdType.HZ,
    LanguageIdType.IA,
    LanguageIdType.IBA,
    LanguageIdType.IBB,
    LanguageIdType.ID,
    LanguageIdType.IE,
    LanguageIdType.IG,
    LanguageIdType.II,
    LanguageIdType.IK,
    LanguageIdType.IKE,
    LanguageIdType.IKT,
    LanguageIdType.ILO,
    LanguageIdType.INH,
    LanguageIdType.IO,
    LanguageIdType.IS,
    LanguageIdType.IT,
    LanguageIdType.IU,
    LanguageIdType.IZH,
    LanguageIdType.JA,
    LanguageIdType.JAM,
    LanguageIdType.JBO,
    LanguageIdType.JGO,
    LanguageIdType.JMC,
    LanguageIdType.JPR,
    LanguageIdType.JRB,
    LanguageIdType.JUT,
    LanguageIdType.JV,
    LanguageIdType.KA,
    LanguageIdType.KAA,
    LanguageIdType.KAB,
    LanguageIdType.KAC,
    LanguageIdType.KAJ,
    LanguageIdType.KAM,
    LanguageIdType.KAW,
    LanguageIdType.KBD,
    LanguageIdType.KBL,
    LanguageIdType.KCG,
    LanguageIdType.KDE,
    LanguageIdType.KEA,
    LanguageIdType.KEN,
    LanguageIdType.KFO,
    LanguageIdType.KG,
    LanguageIdType.KGP,
    LanguageIdType.KHA,
    LanguageIdType.KHO,
    LanguageIdType.KHQ,
    LanguageIdType.KHW,
    LanguageIdType.KI,
    LanguageIdType.KIU,
    LanguageIdType.KJ,
    LanguageIdType.KK,
    LanguageIdType.KKJ,
    LanguageIdType.KL,
    LanguageIdType.KLN,
    LanguageIdType.KM,
    LanguageIdType.KMB,
    LanguageIdType.KN,
    LanguageIdType.KO,
    LanguageIdType.KOI,
    LanguageIdType.KOK,
    LanguageIdType.KOS,
    LanguageIdType.KPE,
    LanguageIdType.KR,
    LanguageIdType.KRC,
    LanguageIdType.KRI,
    LanguageIdType.KRJ,
    LanguageIdType.KRL,
    LanguageIdType.KRU,
    LanguageIdType.KS,
    LanguageIdType.KSB,
    LanguageIdType.KSF,
    LanguageIdType.KSH,
    LanguageIdType.KU,
    LanguageIdType.KUM,
    LanguageIdType.KUT,
    LanguageIdType.KV,
    LanguageIdType.KW,
    LanguageIdType.KWK,
    LanguageIdType.KXV,
    LanguageIdType.KY,
    LanguageIdType.LA,
    LanguageIdType.LAD,
    LanguageIdType.LAG,
    LanguageIdType.LAH,
    LanguageIdType.LAM,
    LanguageIdType.LB,
    LanguageIdType.LEZ,
    LanguageIdType.LFN,
    LanguageIdType.LG,
    LanguageIdType.LI,
    LanguageIdType.LIJ,
    LanguageIdType.LIL,
    LanguageIdType.LIV,
    LanguageIdType.LKT,
    LanguageIdType.LMO,
    LanguageIdType.LN,
    LanguageIdType.LO,
    LanguageIdType.LOL,
    LanguageIdType.LOU,
    LanguageIdType.LOZ,
    LanguageIdType.LRC,
    LanguageIdType.LSM,
    LanguageIdType.LT,
    LanguageIdType.LTG,
    LanguageIdType.LU,
    LanguageIdType.LUA,
    LanguageIdType.LUI,
    LanguageIdType.LUN,
    LanguageIdType.LUO,
    LanguageIdType.LUS,
    LanguageIdType.LUY,
    LanguageIdType.LV,
    LanguageIdType.LZH,
    LanguageIdType.LZZ,
    LanguageIdType.MAD,
    LanguageIdType.MAF,
    LanguageIdType.MAG,
    LanguageIdType.MAI,
    LanguageIdType.MAK,
    LanguageIdType.MAN,
    LanguageIdType.MAS,
    LanguageIdType.MDE,
    LanguageIdType.MDF,
    LanguageIdType.MDR,
    LanguageIdType.MEN,
    LanguageIdType.MER,
    LanguageIdType.MFE,
    LanguageIdType.MG,
    LanguageIdType.MGA,
    LanguageIdType.MGH,
    LanguageIdType.MGO,
    LanguageIdType.MH,
    LanguageIdType.MI,
    LanguageIdType.MIC,
    LanguageIdType.MIN,
    LanguageIdType.MK,
    LanguageIdType.ML,
    LanguageIdType.MN,
    LanguageIdType.MNC,
    LanguageIdType.MNI,
    LanguageIdType.MOE,
    LanguageIdType.MOH,
    LanguageIdType.MOS,
    LanguageIdType.MR,
    LanguageIdType.MRJ,
    LanguageIdType.MS,
    LanguageIdType.MT,
    LanguageIdType.MUA,
    LanguageIdType.MUL,
    LanguageIdType.MUS,
    LanguageIdType.MWL,
    LanguageIdType.MWR,
    LanguageIdType.MWV,
    LanguageIdType.MY,
    LanguageIdType.MYE,
    LanguageIdType.MYV,
    LanguageIdType.MZN,
    LanguageIdType.NA,
    LanguageIdType.NAN,
    LanguageIdType.NAP,
    LanguageIdType.NAQ,
    LanguageIdType.NB,
    LanguageIdType.ND,
    LanguageIdType.NDS,
    LanguageIdType.NDS_NL,
    LanguageIdType.NE,
    LanguageIdType.NEW,
    LanguageIdType.NG,
    LanguageIdType.NIA,
    LanguageIdType.NIU,
    LanguageIdType.NJO,
    LanguageIdType.NL,
    LanguageIdType.NL_BE,
    LanguageIdType.NMG,
    LanguageIdType.NN,
    LanguageIdType.NNH,
    LanguageIdType.NO,
    LanguageIdType.NOG,
    LanguageIdType.NON,
    LanguageIdType.NOV,
    LanguageIdType.NQO,
    LanguageIdType.NR,
    LanguageIdType.NSO,
    LanguageIdType.NUS,
    LanguageIdType.NV,
    LanguageIdType.NWC,
    LanguageIdType.NY,
    LanguageIdType.NYM,
    LanguageIdType.NYN,
    LanguageIdType.NYO,
    LanguageIdType.NZI,
    LanguageIdType.OC,
    LanguageIdType.OJ,
    LanguageIdType.OJB,
    LanguageIdType.OJC,
    LanguageIdType.OJG,
    LanguageIdType.OJS,
    LanguageIdType.OJW,
    LanguageIdType.OKA,
    LanguageIdType.OM,
    LanguageIdType.OR,
    LanguageIdType.OS,
    LanguageIdType.OSA,
    LanguageIdType.OTA,
    LanguageIdType.PA,
    LanguageIdType.PAG,
    LanguageIdType.PAL,
    LanguageIdType.PAM,
    LanguageIdType.PAP,
    LanguageIdType.PAU,
    LanguageIdType.PCD,
    LanguageIdType.PCM,
    LanguageIdType.PDC,
    LanguageIdType.PDT,
    LanguageIdType.PEO,
    LanguageIdType.PFL,
    LanguageIdType.PHN,
    LanguageIdType.PI,
    LanguageIdType.PIS,
    LanguageIdType.PL,
    LanguageIdType.PMS,
    LanguageIdType.PNT,
    LanguageIdType.PON,
    LanguageIdType.PQM,
    LanguageIdType.PRG,
    LanguageIdType.PRO,
    LanguageIdType.PS,
    LanguageIdType.PT,
    LanguageIdType.PT_BR,
    LanguageIdType.PT_PT,
    LanguageIdType.QU,
    LanguageIdType.QUC,
    LanguageIdType.QUG,
    LanguageIdType.RAJ,
    LanguageIdType.RAP,
    LanguageIdType.RAR,
    LanguageIdType.RGN,
    LanguageIdType.RHG,
    LanguageIdType.RIF,
    LanguageIdType.RM,
    LanguageIdType.RN,
    LanguageIdType.RO,
    LanguageIdType.RO_MD,
    LanguageIdType.ROF,
    LanguageIdType.ROM,
    LanguageIdType.RTM,
    LanguageIdType.RU,
    LanguageIdType.RUE,
    LanguageIdType.RUG,
    LanguageIdType.RUP,
    LanguageIdType.RW,
    LanguageIdType.RWK,
    LanguageIdType.SA,
    LanguageIdType.SAD,
    LanguageIdType.SAH,
    LanguageIdType.SAM,
    LanguageIdType.SAQ,
    LanguageIdType.SAS,
    LanguageIdType.SAT,
    LanguageIdType.SAZ,
    LanguageIdType.SBA,
    LanguageIdType.SBP,
    LanguageIdType.SC,
    LanguageIdType.SCN,
    LanguageIdType.SCO,
    LanguageIdType.SD,
    LanguageIdType.SDC,
    LanguageIdType.SDH,
    LanguageIdType.SE,
    LanguageIdType.SEE,
    LanguageIdType.SEH,
    LanguageIdType.SEI,
    LanguageIdType.SEL,
    LanguageIdType.SES,
    LanguageIdType.SG,
    LanguageIdType.SGA,
    LanguageIdType.SGS,
    LanguageIdType.SH,
    LanguageIdType.SHI,
    LanguageIdType.SHN,
    LanguageIdType.SHU,
    LanguageIdType.SI,
    LanguageIdType.SID,
    LanguageIdType.SK,
    LanguageIdType.SKR,
    LanguageIdType.SL,
    LanguageIdType.SLH,
    LanguageIdType.SLI,
    LanguageIdType.SLY,
    LanguageIdType.SM,
    LanguageIdType.SMA,
    LanguageIdType.SMJ,
    LanguageIdType.SMN,
    LanguageIdType.SMS,
    LanguageIdType.SN,
    LanguageIdType.SNK,
    LanguageIdType.SO,
    LanguageIdType.SOG,
    LanguageIdType.SQ,
    LanguageIdType.SR,
    LanguageIdType.SR_ME,
    LanguageIdType.SRN,
    LanguageIdType.SRR,
    LanguageIdType.SS,
    LanguageIdType.SSY,
    LanguageIdType.ST,
    LanguageIdType.STQ,
    LanguageIdType.STR,
    LanguageIdType.SU,
    LanguageIdType.SUK,
    LanguageIdType.SUS,
    LanguageIdType.SUX,
    LanguageIdType.SV,
    LanguageIdType.SW,
    LanguageIdType.SW_CD,
    LanguageIdType.SWB,
    LanguageIdType.SYC,
    LanguageIdType.SYR,
    LanguageIdType.SZL,
    LanguageIdType.TA,
    LanguageIdType.TCE,
    LanguageIdType.TCY,
    LanguageIdType.TE,
    LanguageIdType.TEM,
    LanguageIdType.TEO,
    LanguageIdType.TER,
    LanguageIdType.TET,
    LanguageIdType.TG,
    LanguageIdType.TGX,
    LanguageIdType.TH,
    LanguageIdType.THT,
    LanguageIdType.TI,
    LanguageIdType.TIG,
    LanguageIdType.TIV,
    LanguageIdType.TK,
    LanguageIdType.TKL,
    LanguageIdType.TKR,
    LanguageIdType.TL,
    LanguageIdType.TLH,
    LanguageIdType.TLI,
    LanguageIdType.TLY,
    LanguageIdType.TMH,
    LanguageIdType.TN,
    LanguageIdType.TO,
    LanguageIdType.TOG,
    LanguageIdType.TOK,
    LanguageIdType.TPI,
    LanguageIdType.TR,
    LanguageIdType.TRU,
    LanguageIdType.TRV,
    LanguageIdType.TRW,
    LanguageIdType.TS,
    LanguageIdType.TSD,
    LanguageIdType.TSI,
    LanguageIdType.TT,
    LanguageIdType.TTM,
    LanguageIdType.TTT,
    LanguageIdType.TUM,
    LanguageIdType.TVL,
    LanguageIdType.TW,
    LanguageIdType.TWQ,
    LanguageIdType.TY,
    LanguageIdType.TYV,
    LanguageIdType.TZM,
    LanguageIdType.UDM,
    LanguageIdType.UG,
    LanguageIdType.UGA,
    LanguageIdType.UK,
    LanguageIdType.UMB,
    LanguageIdType.UND,
    LanguageIdType.UR,
    LanguageIdType.UZ,
    LanguageIdType.VAI,
    LanguageIdType.VE,
    LanguageIdType.VEC,
    LanguageIdType.VEP,
    LanguageIdType.VI,
    LanguageIdType.VLS,
    LanguageIdType.VMF,
    LanguageIdType.VMW,
    LanguageIdType.VO,
    LanguageIdType.VOT,
    LanguageIdType.VRO,
    LanguageIdType.VUN,
    LanguageIdType.WA,
    LanguageIdType.WAE,
    LanguageIdType.WAL,
    LanguageIdType.WAR,
    LanguageIdType.WAS,
    LanguageIdType.WBP,
    LanguageIdType.WO,
    LanguageIdType.WUU,
    LanguageIdType.XAL,
    LanguageIdType.XH,
    LanguageIdType.XMF,
    LanguageIdType.XNR,
    LanguageIdType.XOG,
    LanguageIdType.YAO,
    LanguageIdType.YAP,
    LanguageIdType.YAV,
    LanguageIdType.YBB,
    LanguageIdType.YI,
    LanguageIdType.YO,
    LanguageIdType.YRL,
    LanguageIdType.YUE,
    LanguageIdType.ZA,
    LanguageIdType.ZAP,
    LanguageIdType.ZBL,
    LanguageIdType.ZEA,
    LanguageIdType.ZEN,
    LanguageIdType.ZGH,
    LanguageIdType.ZH,
    LanguageIdType.ZH_HANS,
    LanguageIdType.ZH_HANT,
    LanguageIdType.ZU,
    LanguageIdType.ZUN,
    LanguageIdType.ZXX,
    LanguageIdType.ZZA
  });

  public static final KeyIndex<ScriptIdType> KEY_SCRIPT_ID = new KeyIndex<ScriptIdType>(new ScriptIdType[] {
    ScriptIdType.ADLM,
    ScriptIdType.AFAK,
    ScriptIdType.AGHB,
    ScriptIdType.AHOM,
    ScriptIdType.ARAB,
    ScriptIdType.ARAN,
    ScriptIdType.ARMI,
    ScriptIdType.ARMN,
    ScriptIdType.AVST,
    ScriptIdType.BALI,
    ScriptIdType.BAMU,
    ScriptIdType.BASS,
    ScriptIdType.BATK,
    ScriptIdType.BENG,
    ScriptIdType.BHKS,
    ScriptIdType.BLIS,
    ScriptIdType.BOPO,
    ScriptIdType.BRAH,
    ScriptIdType.BRAI,
    ScriptIdType.BUGI,
    ScriptIdType.BUHD,
    ScriptIdType.CAKM,
    ScriptIdType.CANS,
    ScriptIdType.CARI,
    ScriptIdType.CHAM,
    ScriptIdType.CHER,
    ScriptIdType.CHRS,
    ScriptIdType.CIRT,
    ScriptIdType.COPT,
    ScriptIdType.CPMN,
    ScriptIdType.CPRT,
    ScriptIdType.CYRL,
    ScriptIdType.CYRS,
    ScriptIdType.DEVA,
    ScriptIdType.DIAK,
    ScriptIdType.DOGR,
    ScriptIdType.DSRT,
    ScriptIdType.DUPL,
    ScriptIdType.EGYD,
    ScriptIdType.EGYH,
    ScriptIdType.EGYP,
    ScriptIdType.ELBA,
    ScriptIdType.ELYM,
    ScriptIdType.ETHI,
    ScriptIdType.GEOK,
    ScriptIdType.GEOR,
    ScriptIdType.GLAG,
    ScriptIdType.GONG,
    ScriptIdType.GONM,
    ScriptIdType.GOTH,
    ScriptIdType.GRAN,
    ScriptIdType.GREK,
    ScriptIdType.GUJR,
    ScriptIdType.GURU,
    ScriptIdType.HANB,
    ScriptIdType.HANG,
    ScriptIdType.HANI,
    ScriptIdType.HANO,
    ScriptIdType.HANS,
    ScriptIdType.HANT,
    ScriptIdType.HATR,
    ScriptIdType.HEBR,
    ScriptIdType.HIRA,
    ScriptIdType.HLUW,
    ScriptIdType.HMNG,
    ScriptIdType.HMNP,
    ScriptIdType.HRKT,
    ScriptIdType.HUNG,
    ScriptIdType.INDS,
    ScriptIdType.ITAL,
    ScriptIdType.JAMO,
    ScriptIdType.JAVA,
    ScriptIdType.JPAN,
    ScriptIdType.JURC,
    ScriptIdType.KALI,
    ScriptIdType.KANA,
    ScriptIdType.KAWI,
    ScriptIdType.KHAR,
    ScriptIdType.KHMR,
    ScriptIdType.KHOJ,
    ScriptIdType.KITS,
    ScriptIdType.KNDA,
    ScriptIdType.KORE,
    ScriptIdType.KPEL,
    ScriptIdType.KTHI,
    ScriptIdType.LANA,
    ScriptIdType.LAOO,
    ScriptIdType.LATF,
    ScriptIdType.LATG,
    ScriptIdType.LATN,
    ScriptIdType.LEPC,
    ScriptIdType.LIMB,
    ScriptIdType.LINA,
    ScriptIdType.LINB,
    ScriptIdType.LISU,
    ScriptIdType.LOMA,
    ScriptIdType.LYCI,
    ScriptIdType.LYDI,
    ScriptIdType.MAHJ,
    ScriptIdType.MAKA,
    ScriptIdType.MAND,
    ScriptIdType.MANI,
    ScriptIdType.MARC,
    ScriptIdType.MAYA,
    ScriptIdType.MEDF,
    ScriptIdType.MEND,
    ScriptIdType.MERC,
    ScriptIdType.MERO,
    ScriptIdType.MLYM,
    ScriptIdType.MODI,
    ScriptIdType.MONG,
    ScriptIdType.MOON,
    ScriptIdType.MROO,
    ScriptIdType.MTEI,
    ScriptIdType.MULT,
    ScriptIdType.MYMR,
    ScriptIdType.NAGM,
    ScriptIdType.NAND,
    ScriptIdType.NARB,
    ScriptIdType.NBAT,
    ScriptIdType.NEWA,
    ScriptIdType.NKGB,
    ScriptIdType.NKOO,
    ScriptIdType.NSHU,
    ScriptIdType.OGAM,
    ScriptIdType.OLCK,
    ScriptIdType.ORKH,
    ScriptIdType.ORYA,
    ScriptIdType.OSGE,
    ScriptIdType.OSMA,
    ScriptIdType.OUGR,
    ScriptIdType.PALM,
    ScriptIdType.PAUC,
    ScriptIdType.PERM,
    ScriptIdType.PHAG,
    ScriptIdType.PHLI,
    ScriptIdType.PHLP,
    ScriptIdType.PHLV,
    ScriptIdType.PHNX,
    ScriptIdType.PLRD,
    ScriptIdType.PRTI,
    ScriptIdType.QAAG,
    ScriptIdType.RJNG,
    ScriptIdType.ROHG,
    ScriptIdType.RORO,
    ScriptIdType.RUNR,
    ScriptIdType.SAMR,
    ScriptIdType.SARA,
    ScriptIdType.SARB,
    ScriptIdType.SAUR,
    ScriptIdType.SGNW,
    ScriptIdType.SHAW,
    ScriptIdType.SHRD,
    ScriptIdType.SIDD,
    ScriptIdType.SIND,
    ScriptIdType.SINH,
    ScriptIdType.SOGD,
    ScriptIdType.SOGO,
    ScriptIdType.SORA,
    ScriptIdType.SOYO,
    ScriptIdType.SUND,
    ScriptIdType.SYLO,
    ScriptIdType.SYRC,
    ScriptIdType.SYRE,
    ScriptIdType.SYRJ,
    ScriptIdType.SYRN,
    ScriptIdType.TAGB,
    ScriptIdType.TAKR,
    ScriptIdType.TALE,
    ScriptIdType.TALU,
    ScriptIdType.TAML,
    ScriptIdType.TANG,
    ScriptIdType.TAVT,
    ScriptIdType.TELU,
    ScriptIdType.TENG,
    ScriptIdType.TFNG,
    ScriptIdType.TGLG,
    ScriptIdType.THAA,
    ScriptIdType.THAI,
    ScriptIdType.TIBT,
    ScriptIdType.TIRH,
    ScriptIdType.TNSA,
    ScriptIdType.TOTO,
    ScriptIdType.UGAR,
    ScriptIdType.VAII,
    ScriptIdType.VISP,
    ScriptIdType.VITH,
    ScriptIdType.WARA,
    ScriptIdType.WCHO,
    ScriptIdType.WOLE,
    ScriptIdType.XPEO,
    ScriptIdType.XSUX,
    ScriptIdType.YEZI,
    ScriptIdType.YIII,
    ScriptIdType.ZANB,
    ScriptIdType.ZINH,
    ScriptIdType.ZMTH,
    ScriptIdType.ZSYE,
    ScriptIdType.ZSYM,
    ScriptIdType.ZXXX,
    ScriptIdType.ZYYY,
    ScriptIdType.ZZZZ
  });

  public static final KeyIndex<RegionIdType> KEY_REGION_ID = new KeyIndex<RegionIdType>(new RegionIdType[] {
    RegionIdType._001,
    RegionIdType._002,
    RegionIdType._003,
    RegionIdType._005,
    RegionIdType._009,
    RegionIdType._011,
    RegionIdType._013,
    RegionIdType._014,
    RegionIdType._015,
    RegionIdType._017,
    RegionIdType._018,
    RegionIdType._019,
    RegionIdType._021,
    RegionIdType._029,
    RegionIdType._030,
    RegionIdType._034,
    RegionIdType._035,
    RegionIdType._039,
    RegionIdType._053,
    RegionIdType._054,
    RegionIdType._057,
    RegionIdType._061,
    RegionIdType._142,
    RegionIdType._143,
    RegionIdType._145,
    RegionIdType._150,
    RegionIdType._151,
    RegionIdType._154,
    RegionIdType._155,
    RegionIdType._202,
    RegionIdType._419,
    RegionIdType.AC,
    RegionIdType.AD,
    RegionIdType.AE,
    RegionIdType.AF,
    RegionIdType.AG,
    RegionIdType.AI,
    RegionIdType.AL,
    RegionIdType.AM,
    RegionIdType.AO,
    RegionIdType.AQ,
    RegionIdType.AR,
    RegionIdType.AS,
    RegionIdType.AT,
    RegionIdType.AU,
    RegionIdType.AW,
    RegionIdType.AX,
    RegionIdType.AZ,
    RegionIdType.BA,
    RegionIdType.BB,
    RegionIdType.BD,
    RegionIdType.BE,
    RegionIdType.BF,
    RegionIdType.BG,
    RegionIdType.BH,
    RegionIdType.BI,
    RegionIdType.BJ,
    RegionIdType.BL,
    RegionIdType.BM,
    RegionIdType.BN,
    RegionIdType.BO,
    RegionIdType.BQ,
    RegionIdType.BR,
    RegionIdType.BS,
    RegionIdType.BT,
    RegionIdType.BV,
    RegionIdType.BW,
    RegionIdType.BY,
    RegionIdType.BZ,
    RegionIdType.CA,
    RegionIdType.CC,
    RegionIdType.CD,
    RegionIdType.CF,
    RegionIdType.CG,
    RegionIdType.CH,
    RegionIdType.CI,
    RegionIdType.CK,
    RegionIdType.CL,
    RegionIdType.CM,
    RegionIdType.CN,
    RegionIdType.CO,
    RegionIdType.CP,
    RegionIdType.CQ,
    RegionIdType.CR,
    RegionIdType.CU,
    RegionIdType.CV,
    RegionIdType.CW,
    RegionIdType.CX,
    RegionIdType.CY,
    RegionIdType.CZ,
    RegionIdType.DE,
    RegionIdType.DG,
    RegionIdType.DJ,
    RegionIdType.DK,
    RegionIdType.DM,
    RegionIdType.DO,
    RegionIdType.DZ,
    RegionIdType.EA,
    RegionIdType.EC,
    RegionIdType.EE,
    RegionIdType.EG,
    RegionIdType.EH,
    RegionIdType.ER,
    RegionIdType.ES,
    RegionIdType.ET,
    RegionIdType.EU,
    RegionIdType.EZ,
    RegionIdType.FI,
    RegionIdType.FJ,
    RegionIdType.FK,
    RegionIdType.FM,
    RegionIdType.FO,
    RegionIdType.FR,
    RegionIdType.GA,
    RegionIdType.GB,
    RegionIdType.GD,
    RegionIdType.GE,
    RegionIdType.GF,
    RegionIdType.GG,
    RegionIdType.GH,
    RegionIdType.GI,
    RegionIdType.GL,
    RegionIdType.GM,
    RegionIdType.GN,
    RegionIdType.GP,
    RegionIdType.GQ,
    RegionIdType.GR,
    RegionIdType.GS,
    RegionIdType.GT,
    RegionIdType.GU,
    RegionIdType.GW,
    RegionIdType.GY,
    RegionIdType.HK,
    RegionIdType.HM,
    RegionIdType.HN,
    RegionIdType.HR,
    RegionIdType.HT,
    RegionIdType.HU,
    RegionIdType.IC,
    RegionIdType.ID,
    RegionIdType.IE,
    RegionIdType.IL,
    RegionIdType.IM,
    RegionIdType.IN,
    RegionIdType.IO,
    RegionIdType.IQ,
    RegionIdType.IR,
    RegionIdType.IS,
    RegionIdType.IT,
    RegionIdType.JE,
    RegionIdType.JM,
    RegionIdType.JO,
    RegionIdType.JP,
    RegionIdType.KE,
    RegionIdType.KG,
    RegionIdType.KH,
    RegionIdType.KI,
    RegionIdType.KM,
    RegionIdType.KN,
    RegionIdType.KP,
    RegionIdType.KR,
    RegionIdType.KW,
    RegionIdType.KY,
    RegionIdType.KZ,
    RegionIdType.LA,
    RegionIdType.LB,
    RegionIdType.LC,
    RegionIdType.LI,
    RegionIdType.LK,
    RegionIdType.LR,
    RegionIdType.LS,
    RegionIdType.LT,
    RegionIdType.LU,
    RegionIdType.LV,
    RegionIdType.LY,
    RegionIdType.MA,
    RegionIdType.MC,
    RegionIdType.MD,
    RegionIdType.ME,
    RegionIdType.MF,
    RegionIdType.MG,
    RegionIdType.MH,
    RegionIdType.MK,
    RegionIdType.ML,
    RegionIdType.MM,
    RegionIdType.MN,
    RegionIdType.MO,
    RegionIdType.MP,
    RegionIdType.MQ,
    RegionIdType.MR,
    RegionIdType.MS,
    RegionIdType.MT,
    RegionIdType.MU,
    RegionIdType.MV,
    RegionIdType.MW,
    RegionIdType.MX,
    RegionIdType.MY,
    RegionIdType.MZ,
    RegionIdType.NA,
    RegionIdType.NC,
    RegionIdType.NE,
    RegionIdType.NF,
    RegionIdType.NG,
    RegionIdType.NI,
    RegionIdType.NL,
    RegionIdType.NO,
    RegionIdType.NP,
    RegionIdType.NR,
    RegionIdType.NU,
    RegionIdType.NZ,
    RegionIdType.OM,
    RegionIdType.PA,
    RegionIdType.PE,
    RegionIdType.PF,
    RegionIdType.PG,
    RegionIdType.PH,
    RegionIdType.PK,
    RegionIdType.PL,
    RegionIdType.PM,
    RegionIdType.PN,
    RegionIdType.PR,
    RegionIdType.PS,
    RegionIdType.PT,
    RegionIdType.PW,
    RegionIdType.PY,
    RegionIdType.QA,
    RegionIdType.QO,
    RegionIdType.RE,
    RegionIdType.RO,
    RegionIdType.RS,
    RegionIdType.RU,
    RegionIdType.RW,
    RegionIdType.SA,
    RegionIdType.SB,
    RegionIdType.SC,
    RegionIdType.SD,
    RegionIdType.SE,
    RegionIdType.SG,
    RegionIdType.SH,
    RegionIdType.SI,
    RegionIdType.SJ,
    RegionIdType.SK,
    RegionIdType.SL,
    RegionIdType.SM,
    RegionIdType.SN,
    RegionIdType.SO,
    RegionIdType.SR,
    RegionIdType.SS,
    RegionIdType.ST,
    RegionIdType.SV,
    RegionIdType.SX,
    RegionIdType.SY,
    RegionIdType.SZ,
    RegionIdType.TA,
    RegionIdType.TC,
    RegionIdType.TD,
    RegionIdType.TF,
    RegionIdType.TG,
    RegionIdType.TH,
    RegionIdType.TJ,
    RegionIdType.TK,
    RegionIdType.TL,
    RegionIdType.TM,
    RegionIdType.TN,
    RegionIdType.TO,
    RegionIdType.TR,
    RegionIdType.TT,
    RegionIdType.TV,
    RegionIdType.TW,
    RegionIdType.TZ,
    RegionIdType.UA,
    RegionIdType.UG,
    RegionIdType.UM,
    RegionIdType.UN,
    RegionIdType.US,
    RegionIdType.UY,
    RegionIdType.UZ,
    RegionIdType.VA,
    RegionIdType.VC,
    RegionIdType.VE,
    RegionIdType.VG,
    RegionIdType.VI,
    RegionIdType.VN,
    RegionIdType.VU,
    RegionIdType.WF,
    RegionIdType.WS,
    RegionIdType.XA,
    RegionIdType.XB,
    RegionIdType.XK,
    RegionIdType.YE,
    RegionIdType.YT,
    RegionIdType.ZA,
    RegionIdType.ZM,
    RegionIdType.ZW,
    RegionIdType.ZZ
  });

  public static final KeyIndex<UnitType> KEY_UNIT_ID = new KeyIndex<UnitType>(new UnitType[] {
    UnitType.ACRE,
    UnitType.ACRE_FOOT,
    UnitType.AMPERE,
    UnitType.ARC_MINUTE,
    UnitType.ARC_SECOND,
    UnitType.ASTRONOMICAL_UNIT,
    UnitType.ATMOSPHERE,
    UnitType.BAR,
    UnitType.BARREL,
    UnitType.BEAUFORT,
    UnitType.BIT,
    UnitType.BRITISH_THERMAL_UNIT,
    UnitType.BU_JP,
    UnitType.BUSHEL,
    UnitType.BYTE,
    UnitType.CALORIE,
    UnitType.CANDELA,
    UnitType.CARAT,
    UnitType.CELSIUS,
    UnitType.CENTILITER,
    UnitType.CENTIMETER,
    UnitType.CENTURY,
    UnitType.CHO,
    UnitType.CUBIC_CENTIMETER,
    UnitType.CUBIC_FOOT,
    UnitType.CUBIC_INCH,
    UnitType.CUBIC_KILOMETER,
    UnitType.CUBIC_METER,
    UnitType.CUBIC_MILE,
    UnitType.CUBIC_YARD,
    UnitType.CUP,
    UnitType.CUP_JP,
    UnitType.CUP_METRIC,
    UnitType.DALTON,
    UnitType.DAY,
    UnitType.DAY_PERSON,
    UnitType.DECADE,
    UnitType.DECILITER,
    UnitType.DECIMETER,
    UnitType.DEGREE,
    UnitType.DESSERT_SPOON,
    UnitType.DESSERT_SPOON_IMPERIAL,
    UnitType.DOT,
    UnitType.DOT_PER_CENTIMETER,
    UnitType.DOT_PER_INCH,
    UnitType.DRAM,
    UnitType.DROP,
    UnitType.DUNAM,
    UnitType.EARTH_MASS,
    UnitType.EARTH_RADIUS,
    UnitType.ELECTRONVOLT,
    UnitType.EM,
    UnitType.FAHRENHEIT,
    UnitType.FATHOM,
    UnitType.FLUID_OUNCE,
    UnitType.FLUID_OUNCE_IMPERIAL,
    UnitType.FOODCALORIE,
    UnitType.FOOT,
    UnitType.FUN,
    UnitType.FURLONG,
    UnitType.G_FORCE,
    UnitType.GALLON,
    UnitType.GALLON_IMPERIAL,
    UnitType.GASOLINE_ENERGY_DENSITY,
    UnitType.GIGABIT,
    UnitType.GIGABYTE,
    UnitType.GIGAHERTZ,
    UnitType.GIGAWATT,
    UnitType.GRAIN,
    UnitType.GRAM,
    UnitType.HECTARE,
    UnitType.HECTOLITER,
    UnitType.HECTOPASCAL,
    UnitType.HERTZ,
    UnitType.HORSEPOWER,
    UnitType.HOUR,
    UnitType.INCH,
    UnitType.INCH_OFHG,
    UnitType.ITEM,
    UnitType.JIGGER,
    UnitType.JO_JP,
    UnitType.JOULE,
    UnitType.KARAT,
    UnitType.KELVIN,
    UnitType.KEN,
    UnitType.KILOBIT,
    UnitType.KILOBYTE,
    UnitType.KILOCALORIE,
    UnitType.KILOGRAM,
    UnitType.KILOHERTZ,
    UnitType.KILOJOULE,
    UnitType.KILOMETER,
    UnitType.KILOMETER_PER_HOUR,
    UnitType.KILOPASCAL,
    UnitType.KILOWATT,
    UnitType.KILOWATT_HOUR,
    UnitType.KILOWATT_HOUR_PER_100_KILOMETER,
    UnitType.KNOT,
    UnitType.KOKU,
    UnitType.KOSAJI,
    UnitType.LIGHT_YEAR,
    UnitType.LITER,
    UnitType.LITER_PER_100_KILOMETER,
    UnitType.LITER_PER_KILOMETER,
    UnitType.LUMEN,
    UnitType.LUX,
    UnitType.MEGABIT,
    UnitType.MEGABYTE,
    UnitType.MEGAHERTZ,
    UnitType.MEGALITER,
    UnitType.MEGAPASCAL,
    UnitType.MEGAPIXEL,
    UnitType.MEGAWATT,
    UnitType.METER,
    UnitType.METER_PER_SECOND,
    UnitType.METER_PER_SQUARE_SECOND,
    UnitType.MICROGRAM,
    UnitType.MICROMETER,
    UnitType.MICROSECOND,
    UnitType.MILE,
    UnitType.MILE_PER_GALLON,
    UnitType.MILE_PER_GALLON_IMPERIAL,
    UnitType.MILE_PER_HOUR,
    UnitType.MILE_SCANDINAVIAN,
    UnitType.MILLIAMPERE,
    UnitType.MILLIBAR,
    UnitType.MILLIGRAM,
    UnitType.MILLIGRAM_OFGLUCOSE_PER_DECILITER,
    UnitType.MILLILITER,
    UnitType.MILLIMETER,
    UnitType.MILLIMETER_OFHG,
    UnitType.MILLIMOLE_PER_LITER,
    UnitType.MILLISECOND,
    UnitType.MILLIWATT,
    UnitType.MINUTE,
    UnitType.MOLE,
    UnitType.MONTH,
    UnitType.NANOMETER,
    UnitType.NANOSECOND,
    UnitType.NAUTICAL_MILE,
    UnitType.NEWTON,
    UnitType.NEWTON_METER,
    UnitType.OHM,
    UnitType.OSAJI,
    UnitType.OUNCE,
    UnitType.OUNCE_TROY,
    UnitType.PARSEC,
    UnitType.PASCAL,
    UnitType.PERCENT,
    UnitType.PERMILLE,
    UnitType.PERMILLION,
    UnitType.PERMYRIAD,
    UnitType.PETABYTE,
    UnitType.PICOMETER,
    UnitType.PINCH,
    UnitType.PINT,
    UnitType.PINT_METRIC,
    UnitType.PIXEL,
    UnitType.PIXEL_PER_CENTIMETER,
    UnitType.PIXEL_PER_INCH,
    UnitType.POINT,
    UnitType.POUND,
    UnitType.POUND_FORCE,
    UnitType.POUND_FORCE_FOOT,
    UnitType.POUND_FORCE_PER_SQUARE_INCH,
    UnitType.QUART,
    UnitType.QUART_IMPERIAL,
    UnitType.QUARTER,
    UnitType.RADIAN,
    UnitType.REVOLUTION,
    UnitType.RI_JP,
    UnitType.RIN,
    UnitType.SAI,
    UnitType.SE_JP,
    UnitType.SECOND,
    UnitType.SHAKU,
    UnitType.SHAKU_CLOTH,
    UnitType.SHAKU_LENGTH,
    UnitType.SOLAR_LUMINOSITY,
    UnitType.SOLAR_MASS,
    UnitType.SOLAR_RADIUS,
    UnitType.SQUARE_CENTIMETER,
    UnitType.SQUARE_FOOT,
    UnitType.SQUARE_INCH,
    UnitType.SQUARE_KILOMETER,
    UnitType.SQUARE_METER,
    UnitType.SQUARE_MILE,
    UnitType.SQUARE_YARD,
    UnitType.STONE,
    UnitType.SUN,
    UnitType.TABLESPOON,
    UnitType.TEASPOON,
    UnitType.TEMPERATURE,
    UnitType.TERABIT,
    UnitType.TERABYTE,
    UnitType.THERM_US,
    UnitType.TO_JP,
    UnitType.TON,
    UnitType.TONNE,
    UnitType.VOLT,
    UnitType.WATT,
    UnitType.WEEK,
    UnitType.YARD,
    UnitType.YEAR
  });

  public static final KeyIndex<String> KEY_TIMEZONE_ID = new KeyIndex<String>(new String[] {
    "Africa/Abidjan",
    "Africa/Accra",
    "Africa/Addis_Ababa",
    "Africa/Algiers",
    "Africa/Asmera",
    "Africa/Bamako",
    "Africa/Bangui",
    "Africa/Banjul",
    "Africa/Bissau",
    "Africa/Blantyre",
    "Africa/Brazzaville",
    "Africa/Bujumbura",
    "Africa/Cairo",
    "Africa/Casablanca",
    "Africa/Ceuta",
    "Africa/Conakry",
    "Africa/Dakar",
    "Africa/Dar_es_Salaam",
    "Africa/Djibouti",
    "Africa/Douala",
    "Africa/El_Aaiun",
    "Africa/Freetown",
    "Africa/Gaborone",
    "Africa/Harare",
    "Africa/Johannesburg",
    "Africa/Juba",
    "Africa/Kampala",
    "Africa/Khartoum",
    "Africa/Kigali",
    "Africa/Kinshasa",
    "Africa/Lagos",
    "Africa/Libreville",
    "Africa/Lome",
    "Africa/Luanda",
    "Africa/Lubumbashi",
    "Africa/Lusaka",
    "Africa/Malabo",
    "Africa/Maputo",
    "Africa/Maseru",
    "Africa/Mbabane",
    "Africa/Mogadishu",
    "Africa/Monrovia",
    "Africa/Nairobi",
    "Africa/Ndjamena",
    "Africa/Niamey",
    "Africa/Nouakchott",
    "Africa/Ouagadougou",
    "Africa/Porto-Novo",
    "Africa/Sao_Tome",
    "Africa/Tripoli",
    "Africa/Tunis",
    "Africa/Windhoek",
    "America/Adak",
    "America/Anchorage",
    "America/Anguilla",
    "America/Antigua",
    "America/Araguaina",
    "America/Argentina/La_Rioja",
    "America/Argentina/Rio_Gallegos",
    "America/Argentina/Salta",
    "America/Argentina/San_Juan",
    "America/Argentina/San_Luis",
    "America/Argentina/Tucuman",
    "America/Argentina/Ushuaia",
    "America/Aruba",
    "America/Asuncion",
    "America/Bahia",
    "America/Bahia_Banderas",
    "America/Barbados",
    "America/Belem",
    "America/Belize",
    "America/Blanc-Sablon",
    "America/Boa_Vista",
    "America/Bogota",
    "America/Boise",
    "America/Buenos_Aires",
    "America/Cambridge_Bay",
    "America/Campo_Grande",
    "America/Cancun",
    "America/Caracas",
    "America/Catamarca",
    "America/Cayenne",
    "America/Cayman",
    "America/Chicago",
    "America/Chihuahua",
    "America/Ciudad_Juarez",
    "America/Coral_Harbour",
    "America/Cordoba",
    "America/Costa_Rica",
    "America/Creston",
    "America/Cuiaba",
    "America/Curacao",
    "America/Danmarkshavn",
    "America/Dawson",
    "America/Dawson_Creek",
    "America/Denver",
    "America/Detroit",
    "America/Dominica",
    "America/Edmonton",
    "America/Eirunepe",
    "America/El_Salvador",
    "America/Fort_Nelson",
    "America/Fortaleza",
    "America/Glace_Bay",
    "America/Godthab",
    "America/Goose_Bay",
    "America/Grand_Turk",
    "America/Grenada",
    "America/Guadeloupe",
    "America/Guatemala",
    "America/Guayaquil",
    "America/Guyana",
    "America/Halifax",
    "America/Havana",
    "America/Hermosillo",
    "America/Indiana/Knox",
    "America/Indiana/Marengo",
    "America/Indiana/Petersburg",
    "America/Indiana/Tell_City",
    "America/Indiana/Vevay",
    "America/Indiana/Vincennes",
    "America/Indiana/Winamac",
    "America/Indianapolis",
    "America/Inuvik",
    "America/Iqaluit",
    "America/Jamaica",
    "America/Jujuy",
    "America/Juneau",
    "America/Kentucky/Monticello",
    "America/Kralendijk",
    "America/La_Paz",
    "America/Lima",
    "America/Los_Angeles",
    "America/Louisville",
    "America/Lower_Princes",
    "America/Maceio",
    "America/Managua",
    "America/Manaus",
    "America/Marigot",
    "America/Martinique",
    "America/Matamoros",
    "America/Mazatlan",
    "America/Mendoza",
    "America/Menominee",
    "America/Merida",
    "America/Metlakatla",
    "America/Mexico_City",
    "America/Miquelon",
    "America/Moncton",
    "America/Monterrey",
    "America/Montevideo",
    "America/Montserrat",
    "America/Nassau",
    "America/New_York",
    "America/Nome",
    "America/Noronha",
    "America/North_Dakota/Beulah",
    "America/North_Dakota/Center",
    "America/North_Dakota/New_Salem",
    "America/Ojinaga",
    "America/Panama",
    "America/Paramaribo",
    "America/Phoenix",
    "America/Port-au-Prince",
    "America/Port_of_Spain",
    "America/Porto_Velho",
    "America/Puerto_Rico",
    "America/Punta_Arenas",
    "America/Rankin_Inlet",
    "America/Recife",
    "America/Regina",
    "America/Resolute",
    "America/Rio_Branco",
    "America/Santarem",
    "America/Santiago",
    "America/Santo_Domingo",
    "America/Sao_Paulo",
    "America/Scoresbysund",
    "America/Sitka",
    "America/St_Barthelemy",
    "America/St_Johns",
    "America/St_Kitts",
    "America/St_Lucia",
    "America/St_Thomas",
    "America/St_Vincent",
    "America/Swift_Current",
    "America/Tegucigalpa",
    "America/Thule",
    "America/Tijuana",
    "America/Toronto",
    "America/Tortola",
    "America/Vancouver",
    "America/Whitehorse",
    "America/Winnipeg",
    "America/Yakutat",
    "Antarctica/Casey",
    "Antarctica/Davis",
    "Antarctica/DumontDUrville",
    "Antarctica/Macquarie",
    "Antarctica/Mawson",
    "Antarctica/McMurdo",
    "Antarctica/Palmer",
    "Antarctica/Rothera",
    "Antarctica/Syowa",
    "Antarctica/Troll",
    "Antarctica/Vostok",
    "Arctic/Longyearbyen",
    "Asia/Aden",
    "Asia/Almaty",
    "Asia/Amman",
    "Asia/Anadyr",
    "Asia/Aqtau",
    "Asia/Aqtobe",
    "Asia/Ashgabat",
    "Asia/Atyrau",
    "Asia/Baghdad",
    "Asia/Bahrain",
    "Asia/Baku",
    "Asia/Bangkok",
    "Asia/Barnaul",
    "Asia/Beirut",
    "Asia/Bishkek",
    "Asia/Brunei",
    "Asia/Calcutta",
    "Asia/Chita",
    "Asia/Choibalsan",
    "Asia/Colombo",
    "Asia/Damascus",
    "Asia/Dhaka",
    "Asia/Dili",
    "Asia/Dubai",
    "Asia/Dushanbe",
    "Asia/Famagusta",
    "Asia/Gaza",
    "Asia/Hebron",
    "Asia/Hong_Kong",
    "Asia/Hovd",
    "Asia/Irkutsk",
    "Asia/Jakarta",
    "Asia/Jayapura",
    "Asia/Jerusalem",
    "Asia/Kabul",
    "Asia/Kamchatka",
    "Asia/Karachi",
    "Asia/Katmandu",
    "Asia/Khandyga",
    "Asia/Krasnoyarsk",
    "Asia/Kuala_Lumpur",
    "Asia/Kuching",
    "Asia/Kuwait",
    "Asia/Macau",
    "Asia/Magadan",
    "Asia/Makassar",
    "Asia/Manila",
    "Asia/Muscat",
    "Asia/Nicosia",
    "Asia/Novokuznetsk",
    "Asia/Novosibirsk",
    "Asia/Omsk",
    "Asia/Oral",
    "Asia/Phnom_Penh",
    "Asia/Pontianak",
    "Asia/Pyongyang",
    "Asia/Qatar",
    "Asia/Qostanay",
    "Asia/Qyzylorda",
    "Asia/Rangoon",
    "Asia/Riyadh",
    "Asia/Saigon",
    "Asia/Sakhalin",
    "Asia/Samarkand",
    "Asia/Seoul",
    "Asia/Shanghai",
    "Asia/Singapore",
    "Asia/Srednekolymsk",
    "Asia/Taipei",
    "Asia/Tashkent",
    "Asia/Tbilisi",
    "Asia/Tehran",
    "Asia/Thimphu",
    "Asia/Tokyo",
    "Asia/Tomsk",
    "Asia/Ulaanbaatar",
    "Asia/Urumqi",
    "Asia/Ust-Nera",
    "Asia/Vientiane",
    "Asia/Vladivostok",
    "Asia/Yakutsk",
    "Asia/Yekaterinburg",
    "Asia/Yerevan",
    "Atlantic/Azores",
    "Atlantic/Bermuda",
    "Atlantic/Canary",
    "Atlantic/Cape_Verde",
    "Atlantic/Faeroe",
    "Atlantic/Madeira",
    "Atlantic/Reykjavik",
    "Atlantic/South_Georgia",
    "Atlantic/St_Helena",
    "Atlantic/Stanley",
    "Australia/Adelaide",
    "Australia/Brisbane",
    "Australia/Broken_Hill",
    "Australia/Darwin",
    "Australia/Eucla",
    "Australia/Hobart",
    "Australia/Lindeman",
    "Australia/Lord_Howe",
    "Australia/Melbourne",
    "Australia/Perth",
    "Australia/Sydney",
    "Etc/UTC",
    "Etc/Unknown",
    "Europe/Amsterdam",
    "Europe/Andorra",
    "Europe/Astrakhan",
    "Europe/Athens",
    "Europe/Belgrade",
    "Europe/Berlin",
    "Europe/Bratislava",
    "Europe/Brussels",
    "Europe/Bucharest",
    "Europe/Budapest",
    "Europe/Busingen",
    "Europe/Chisinau",
    "Europe/Copenhagen",
    "Europe/Dublin",
    "Europe/Gibraltar",
    "Europe/Guernsey",
    "Europe/Helsinki",
    "Europe/Isle_of_Man",
    "Europe/Istanbul",
    "Europe/Jersey",
    "Europe/Kaliningrad",
    "Europe/Kiev",
    "Europe/Kirov",
    "Europe/Lisbon",
    "Europe/Ljubljana",
    "Europe/London",
    "Europe/Luxembourg",
    "Europe/Madrid",
    "Europe/Malta",
    "Europe/Mariehamn",
    "Europe/Minsk",
    "Europe/Monaco",
    "Europe/Moscow",
    "Europe/Oslo",
    "Europe/Paris",
    "Europe/Podgorica",
    "Europe/Prague",
    "Europe/Riga",
    "Europe/Rome",
    "Europe/Samara",
    "Europe/San_Marino",
    "Europe/Sarajevo",
    "Europe/Saratov",
    "Europe/Simferopol",
    "Europe/Skopje",
    "Europe/Sofia",
    "Europe/Stockholm",
    "Europe/Tallinn",
    "Europe/Tirane",
    "Europe/Ulyanovsk",
    "Europe/Vaduz",
    "Europe/Vatican",
    "Europe/Vienna",
    "Europe/Vilnius",
    "Europe/Volgograd",
    "Europe/Warsaw",
    "Europe/Zagreb",
    "Europe/Zurich",
    "Indian/Antananarivo",
    "Indian/Chagos",
    "Indian/Christmas",
    "Indian/Cocos",
    "Indian/Comoro",
    "Indian/Kerguelen",
    "Indian/Mahe",
    "Indian/Maldives",
    "Indian/Mauritius",
    "Indian/Mayotte",
    "Indian/Reunion",
    "Pacific/Apia",
    "Pacific/Auckland",
    "Pacific/Bougainville",
    "Pacific/Chatham",
    "Pacific/Easter",
    "Pacific/Efate",
    "Pacific/Enderbury",
    "Pacific/Fakaofo",
    "Pacific/Fiji",
    "Pacific/Funafuti",
    "Pacific/Galapagos",
    "Pacific/Gambier",
    "Pacific/Guadalcanal",
    "Pacific/Guam",
    "Pacific/Honolulu",
    "Pacific/Kanton",
    "Pacific/Kiritimati",
    "Pacific/Kosrae",
    "Pacific/Kwajalein",
    "Pacific/Majuro",
    "Pacific/Marquesas",
    "Pacific/Midway",
    "Pacific/Nauru",
    "Pacific/Niue",
    "Pacific/Norfolk",
    "Pacific/Noumea",
    "Pacific/Pago_Pago",
    "Pacific/Palau",
    "Pacific/Pitcairn",
    "Pacific/Ponape",
    "Pacific/Port_Moresby",
    "Pacific/Rarotonga",
    "Pacific/Saipan",
    "Pacific/Tahiti",
    "Pacific/Tarawa",
    "Pacific/Tongatapu",
    "Pacific/Truk",
    "Pacific/Wake",
    "Pacific/Wallis"
  });

  public static final KeyIndex<String> KEY_NUMBER_SYSTEM_NAME = new KeyIndex<String>(new String[] {
    "arab",
    "arabext",
    "beng",
    "deva",
    "gujr",
    "guru",
    "hanidec",
    "khmr",
    "knda",
    "laoo",
    "latn",
    "mlym",
    "mymr",
    "tamldec",
    "telu",
    "thai"
  });

  public static final KeyIndex<String> KEY_GREGORIAN_AVAILABLE_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "Bhms",
    "E",
    "EBhm",
    "EBhms",
    "EEEEd",
    "EHm",
    "EHms",
    "Ed",
    "Ehm",
    "Ehms",
    "Gy",
    "GyM",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "HHmm",
    "HHmmZ",
    "HHmmss",
    "Hm",
    "Hms",
    "Hmsv",
    "Hmsvvvv",
    "Hmv",
    "Hmvvvv",
    "M",
    "MEEEEd",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEEEEd",
    "MMMMEd",
    "MMMMd",
    "MMMMdd",
    "MMMd",
    "MMMdd",
    "MMd",
    "MMdd",
    "Md",
    "Mdd",
    "d",
    "h",
    "hm",
    "hms",
    "hmsv",
    "hmsvvvv",
    "hmv",
    "hmvvvv",
    "mmss",
    "ms",
    "y",
    "yM",
    "yMEEEEd",
    "yMEd",
    "yMM",
    "yMMM",
    "yMMMEEEEd",
    "yMMMEd",
    "yMMMM",
    "yMMMMEEEEd",
    "yMMMMEd",
    "yMMMMccccd",
    "yMMMMd",
    "yMMMd",
    "yMMdd",
    "yMd",
    "yQ",
    "yQQQ",
    "yQQQQ"
  });

  public static final KeyIndex<String> KEY_GREGORIAN_PLURAL_FORMAT = new KeyIndex<String>(new String[] {
    "MMMMW",
    "yw"
  });

  public static final KeyIndex<String> KEY_GREGORIAN_INTERVAL_FORMAT = new KeyIndex<String>(new String[] {
    "Bh",
    "Bhm",
    "Gy",
    "GyM",
    "GyMEd",
    "GyMMM",
    "GyMMMEEEEd",
    "GyMMMEd",
    "GyMMMM",
    "GyMMMMEd",
    "GyMMMMd",
    "GyMMMd",
    "GyMd",
    "H",
    "Hm",
    "Hmv",
    "Hmvvvv",
    "Hv",
    "Hvvvv",
    "M",
    "MEd",
    "MMM",
    "MMMEEEEd",
    "MMMEd",
    "MMMM",
    "MMMMEd",
    "MMMMd",
    "MMMd",
    "Md",
    "d",
    "h",
    "hm",
    "hmv",
    "hmvvvv",
    "hv",
    "hvvvv",
    "y",
    "yM",
    "yMEd",
    "yMMM",
    "yMMMEEEEd",
    "yMMMEd",
    "yMMMM",
    "yMMMMEEEEd",
    "yMMMMEd",
    "yMMMMd",
    "yMMMd",
    "yMd"
  });

  public static final Schema SCHEMA = new Schema(
    /* Names = */ new NamesSchema(
      /* languages = */ new LanguageNameInfo(
        /* displayName = */ new Vector2Arrow<AltType, LanguageIdType>(0, KEY_ALT_KEY, KEY_LANGUAGE_ID)
      ),
      /* scripts = */ new ScriptNameInfo(
        /* displayName = */ new Vector2Arrow<AltType, ScriptIdType>(4677, KEY_ALT_KEY, KEY_SCRIPT_ID)
      ),
      /* regions = */ new RegionNameInfo(
        /* displayName = */ new Vector2Arrow<AltType, RegionIdType>(6092, KEY_ALT_KEY, KEY_REGION_ID)
      )
    ),
    /* Numbers = */ new NumbersSchema(
      /* minimumGroupingDigits = */ new FieldArrow(8158),
      /* numberSystems = */ new Vector1Arrow<NumberSystemCategory>(8159, KEY_NUMBER_SYSTEM),
      /* Map<NumberSystemName, NumberSystemInfo> numberSystem = */ new HashMap<String, NumberSystemInfo>() {{
        this.put("arab", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(8164, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(8180),
            /* accounting = */ new FieldArrow(8181),
            /* short_ = */ new DigitsArrow<PluralType>(8182, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(8362, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(8369, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(8376),
            /* short_ = */ new DigitsArrow<PluralType>(8377, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(8557, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(8737),
          /* scientificFormat = */ new FieldArrow(8738),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(8739, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("arabext", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(8744, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(8760),
            /* accounting = */ new FieldArrow(8761),
            /* short_ = */ new DigitsArrow<PluralType>(8762, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(8942, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(8949, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(8956),
            /* short_ = */ new DigitsArrow<PluralType>(8957, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(9137, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(9317),
          /* scientificFormat = */ new FieldArrow(9318),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(9319, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("beng", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(9324, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(9340),
            /* accounting = */ new FieldArrow(9341),
            /* short_ = */ new DigitsArrow<PluralType>(9342, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(9522, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(9529, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(9536),
            /* short_ = */ new DigitsArrow<PluralType>(9537, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(9717, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(9897),
          /* scientificFormat = */ new FieldArrow(9898),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(9899, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("deva", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(9904, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(9920),
            /* accounting = */ new FieldArrow(9921),
            /* short_ = */ new DigitsArrow<PluralType>(9922, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(10102, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(10109, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(10116),
            /* short_ = */ new DigitsArrow<PluralType>(10117, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(10297, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(10477),
          /* scientificFormat = */ new FieldArrow(10478),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(10479, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("gujr", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(10484, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(10500),
            /* accounting = */ new FieldArrow(10501),
            /* short_ = */ new DigitsArrow<PluralType>(10502, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(10682, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(10689, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(10696),
            /* short_ = */ new DigitsArrow<PluralType>(10697, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(10877, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(11057),
          /* scientificFormat = */ new FieldArrow(11058),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(11059, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("guru", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(11064, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(11080),
            /* accounting = */ new FieldArrow(11081),
            /* short_ = */ new DigitsArrow<PluralType>(11082, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(11262, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(11269, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(11276),
            /* short_ = */ new DigitsArrow<PluralType>(11277, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(11457, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(11637),
          /* scientificFormat = */ new FieldArrow(11638),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(11639, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("hanidec", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(11644, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(11660),
            /* accounting = */ new FieldArrow(11661),
            /* short_ = */ new DigitsArrow<PluralType>(11662, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(11842, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(11849, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(11856),
            /* short_ = */ new DigitsArrow<PluralType>(11857, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(12037, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(12217),
          /* scientificFormat = */ new FieldArrow(12218),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(12219, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("khmr", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(12224, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(12240),
            /* accounting = */ new FieldArrow(12241),
            /* short_ = */ new DigitsArrow<PluralType>(12242, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(12422, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(12429, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(12436),
            /* short_ = */ new DigitsArrow<PluralType>(12437, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(12617, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(12797),
          /* scientificFormat = */ new FieldArrow(12798),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(12799, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("knda", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(12804, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(12820),
            /* accounting = */ new FieldArrow(12821),
            /* short_ = */ new DigitsArrow<PluralType>(12822, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(13002, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(13009, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(13016),
            /* short_ = */ new DigitsArrow<PluralType>(13017, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(13197, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(13377),
          /* scientificFormat = */ new FieldArrow(13378),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(13379, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("laoo", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(13384, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(13400),
            /* accounting = */ new FieldArrow(13401),
            /* short_ = */ new DigitsArrow<PluralType>(13402, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(13582, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(13589, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(13596),
            /* short_ = */ new DigitsArrow<PluralType>(13597, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(13777, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(13957),
          /* scientificFormat = */ new FieldArrow(13958),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(13959, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("latn", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(13964, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(13980),
            /* accounting = */ new FieldArrow(13981),
            /* short_ = */ new DigitsArrow<PluralType>(13982, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(14162, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(14169, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(14176),
            /* short_ = */ new DigitsArrow<PluralType>(14177, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(14357, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(14537),
          /* scientificFormat = */ new FieldArrow(14538),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(14539, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("mlym", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(14544, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(14560),
            /* accounting = */ new FieldArrow(14561),
            /* short_ = */ new DigitsArrow<PluralType>(14562, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(14742, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(14749, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(14756),
            /* short_ = */ new DigitsArrow<PluralType>(14757, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(14937, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(15117),
          /* scientificFormat = */ new FieldArrow(15118),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(15119, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("mymr", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(15124, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(15140),
            /* accounting = */ new FieldArrow(15141),
            /* short_ = */ new DigitsArrow<PluralType>(15142, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(15322, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(15329, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(15336),
            /* short_ = */ new DigitsArrow<PluralType>(15337, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(15517, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(15697),
          /* scientificFormat = */ new FieldArrow(15698),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(15699, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("tamldec", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(15704, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(15720),
            /* accounting = */ new FieldArrow(15721),
            /* short_ = */ new DigitsArrow<PluralType>(15722, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(15902, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(15909, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(15916),
            /* short_ = */ new DigitsArrow<PluralType>(15917, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(16097, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(16277),
          /* scientificFormat = */ new FieldArrow(16278),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(16279, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("telu", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(16284, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(16300),
            /* accounting = */ new FieldArrow(16301),
            /* short_ = */ new DigitsArrow<PluralType>(16302, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(16482, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(16489, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(16496),
            /* short_ = */ new DigitsArrow<PluralType>(16497, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(16677, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(16857),
          /* scientificFormat = */ new FieldArrow(16858),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(16859, KEY_NUMBER_MISC_PATTERN)
        ));
        this.put("thai", new NumberSystemInfo(
          /* symbols = */ new Vector1Arrow<NumberSymbolType>(16864, KEY_NUMBER_SYMBOL),
          /* currencyFormats = */ new CurrencyFormats(
            /* standard = */ new FieldArrow(16880),
            /* accounting = */ new FieldArrow(16881),
            /* short_ = */ new DigitsArrow<PluralType>(16882, KEY_PLURAL_KEY),
            /* spacing = */ new Vector2Arrow<CurrencySpacingPos, CurrencySpacingPattern>(17062, KEY_CURRENCY_SPACING_POS, KEY_CURRENCY_SPACING_PATTERN),
            /* unitPattern = */ new Vector1Arrow<PluralType>(17069, KEY_PLURAL_KEY)
          ),
          /* decimalFormats = */ new DecimalFormats(
            /* standard = */ new FieldArrow(17076),
            /* short_ = */ new DigitsArrow<PluralType>(17077, KEY_PLURAL_KEY),
            /* long_ = */ new DigitsArrow<PluralType>(17257, KEY_PLURAL_KEY)
          ),
          /* percentFormat = */ new FieldArrow(17437),
          /* scientificFormat = */ new FieldArrow(17438),
          /* miscPatterns = */ new Vector1Arrow<NumberMiscPatternType>(17439, KEY_NUMBER_MISC_PATTERN)
        ));

      }}
    ),
    /* DateFields = */ new DateFieldsSchema(
      /* relativeTimes = */ new RelativeTimes(
        /* wide = */ new RelativeTimeFields(
          /* previous2 = */ new Vector1Arrow<RelativeTimeFieldType>(17444, KEY_RELATIVE_TIME_FIELD),
          /* previous = */ new Vector1Arrow<RelativeTimeFieldType>(17460, KEY_RELATIVE_TIME_FIELD),
          /* current = */ new Vector1Arrow<RelativeTimeFieldType>(17476, KEY_RELATIVE_TIME_FIELD),
          /* next = */ new Vector1Arrow<RelativeTimeFieldType>(17492, KEY_RELATIVE_TIME_FIELD),
          /* next2 = */ new Vector1Arrow<RelativeTimeFieldType>(17508, KEY_RELATIVE_TIME_FIELD),
          /* future = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(17524, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD),
          /* past = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(17615, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD)
        ),
        /* short = */ new RelativeTimeFields(
          /* previous2 = */ new Vector1Arrow<RelativeTimeFieldType>(17706, KEY_RELATIVE_TIME_FIELD),
          /* previous = */ new Vector1Arrow<RelativeTimeFieldType>(17722, KEY_RELATIVE_TIME_FIELD),
          /* current = */ new Vector1Arrow<RelativeTimeFieldType>(17738, KEY_RELATIVE_TIME_FIELD),
          /* next = */ new Vector1Arrow<RelativeTimeFieldType>(17754, KEY_RELATIVE_TIME_FIELD),
          /* next2 = */ new Vector1Arrow<RelativeTimeFieldType>(17770, KEY_RELATIVE_TIME_FIELD),
          /* future = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(17786, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD),
          /* past = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(17877, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD)
        ),
        /* narrow = */ new RelativeTimeFields(
          /* previous2 = */ new Vector1Arrow<RelativeTimeFieldType>(17968, KEY_RELATIVE_TIME_FIELD),
          /* previous = */ new Vector1Arrow<RelativeTimeFieldType>(17984, KEY_RELATIVE_TIME_FIELD),
          /* current = */ new Vector1Arrow<RelativeTimeFieldType>(18000, KEY_RELATIVE_TIME_FIELD),
          /* next = */ new Vector1Arrow<RelativeTimeFieldType>(18016, KEY_RELATIVE_TIME_FIELD),
          /* next2 = */ new Vector1Arrow<RelativeTimeFieldType>(18032, KEY_RELATIVE_TIME_FIELD),
          /* future = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(18048, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD),
          /* past = */ new Vector2Arrow<PluralType, RelativeTimeFieldType>(18139, KEY_PLURAL_KEY, KEY_RELATIVE_TIME_FIELD)
        )
      ),
      /* displayName = */ new Vector2Arrow<DateFieldType, DateFieldWidthType>(18230, KEY_DATE_FIELD, KEY_DATE_FIELD_WIDTH)
    ),
    /* Layout = */ new LayoutSchema(
      /* characterOrder = */ new FieldArrow(18291),
      /* lineOrder = */ new FieldArrow(18292)
    ),
    /* ListPatterns = */ new ListPatternsSchema(
      /* and = */ new Vector1Arrow<ListPatternPositionType>(18293, KEY_LIST_PATTERN_POSITION),
      /* andShort = */ new Vector1Arrow<ListPatternPositionType>(18298, KEY_LIST_PATTERN_POSITION),
      /* or = */ new Vector1Arrow<ListPatternPositionType>(18303, KEY_LIST_PATTERN_POSITION),
      /* unitLong = */ new Vector1Arrow<ListPatternPositionType>(18308, KEY_LIST_PATTERN_POSITION),
      /* unitNarrow = */ new Vector1Arrow<ListPatternPositionType>(18313, KEY_LIST_PATTERN_POSITION),
      /* unitShort = */ new Vector1Arrow<ListPatternPositionType>(18318, KEY_LIST_PATTERN_POSITION)
    ),
    /* Buddhist = */ new BuddhistSchema(
      /* eras = */ new Vector3Arrow<EraWidthType, String, EraAltType>(18323, KEY_ERA_TYPE, KEY_BUDDHIST_ERA, KEY_ERA_ALT_KEY),
      /* format = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(18330, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(18359, KEY_FIELD_WIDTH, KEY_BUDDHIST_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(18408, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(18425, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* standAlone = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(18522, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(18551, KEY_FIELD_WIDTH, KEY_BUDDHIST_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(18600, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(18617, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* availableFormats = */ new Vector1Arrow<String>(18714, KEY_BUDDHIST_AVAILABLE_FORMAT),
      /* pluralFormats = */ new Vector2Arrow<PluralType, String>(18799, KEY_PLURAL_KEY, KEY_BUDDHIST_PLURAL_FORMAT),
      /* intervalFormats = */ new Vector2Arrow<String, DateTimePatternFieldType>(18800, KEY_BUDDHIST_INTERVAL_FORMAT, KEY_DATE_TIME_PATTERN_FIELD),
      /* dateFormats = */ new Vector1Arrow<FormatWidthType>(19311, KEY_FORMAT_WIDTH),
      /* timeFormats = */ new Vector1Arrow<FormatWidthType>(19316, KEY_FORMAT_WIDTH),
      /* dateTimeFormats = */ new Vector1Arrow<FormatWidthType>(19321, KEY_FORMAT_WIDTH),
      /* dateTimeFormatsAt = */ new Vector1Arrow<FormatWidthType>(19326, KEY_FORMAT_WIDTH),
      /* intervalFormatFallback = */ new FieldArrow(19331)
    ),
    /* Gregorian = */ new GregorianSchema(
      /* eras = */ new Vector3Arrow<EraWidthType, String, EraAltType>(19332, KEY_ERA_TYPE, KEY_GREGORIAN_ERA, KEY_ERA_ALT_KEY),
      /* format = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(19345, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(19374, KEY_FIELD_WIDTH, KEY_GREGORIAN_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(19423, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(19440, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* standAlone = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(19537, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(19566, KEY_FIELD_WIDTH, KEY_GREGORIAN_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(19615, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(19632, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* availableFormats = */ new Vector1Arrow<String>(19729, KEY_GREGORIAN_AVAILABLE_FORMAT),
      /* pluralFormats = */ new Vector2Arrow<PluralType, String>(19808, KEY_PLURAL_KEY, KEY_GREGORIAN_PLURAL_FORMAT),
      /* intervalFormats = */ new Vector2Arrow<String, DateTimePatternFieldType>(19821, KEY_GREGORIAN_INTERVAL_FORMAT, KEY_DATE_TIME_PATTERN_FIELD),
      /* dateFormats = */ new Vector1Arrow<FormatWidthType>(20302, KEY_FORMAT_WIDTH),
      /* timeFormats = */ new Vector1Arrow<FormatWidthType>(20307, KEY_FORMAT_WIDTH),
      /* dateTimeFormats = */ new Vector1Arrow<FormatWidthType>(20312, KEY_FORMAT_WIDTH),
      /* dateTimeFormatsAt = */ new Vector1Arrow<FormatWidthType>(20317, KEY_FORMAT_WIDTH),
      /* intervalFormatFallback = */ new FieldArrow(20322)
    ),
    /* Japanese = */ new JapaneseSchema(
      /* eras = */ new Vector3Arrow<EraWidthType, String, EraAltType>(20323, KEY_ERA_TYPE, KEY_JAPANESE_ERA, KEY_ERA_ALT_KEY),
      /* format = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(21746, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(21775, KEY_FIELD_WIDTH, KEY_JAPANESE_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(21824, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(21841, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* standAlone = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(21938, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(21967, KEY_FIELD_WIDTH, KEY_JAPANESE_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(22016, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(22033, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* availableFormats = */ new Vector1Arrow<String>(22130, KEY_JAPANESE_AVAILABLE_FORMAT),
      /* pluralFormats = */ new Vector2Arrow<PluralType, String>(22215, KEY_PLURAL_KEY, KEY_JAPANESE_PLURAL_FORMAT),
      /* intervalFormats = */ new Vector2Arrow<String, DateTimePatternFieldType>(22216, KEY_JAPANESE_INTERVAL_FORMAT, KEY_DATE_TIME_PATTERN_FIELD),
      /* dateFormats = */ new Vector1Arrow<FormatWidthType>(22727, KEY_FORMAT_WIDTH),
      /* timeFormats = */ new Vector1Arrow<FormatWidthType>(22732, KEY_FORMAT_WIDTH),
      /* dateTimeFormats = */ new Vector1Arrow<FormatWidthType>(22737, KEY_FORMAT_WIDTH),
      /* dateTimeFormatsAt = */ new Vector1Arrow<FormatWidthType>(22742, KEY_FORMAT_WIDTH),
      /* intervalFormatFallback = */ new FieldArrow(22747)
    ),
    /* Persian = */ new PersianSchema(
      /* eras = */ new Vector3Arrow<EraWidthType, String, EraAltType>(22748, KEY_ERA_TYPE, KEY_PERSIAN_ERA, KEY_ERA_ALT_KEY),
      /* format = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(22755, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(22784, KEY_FIELD_WIDTH, KEY_PERSIAN_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(22833, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(22850, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* standAlone = */ new CalendarFields(
        /* weekdays = */ new Vector2Arrow<String, String>(22947, KEY_FIELD_WIDTH, KEY_WEEKDAY),
        /* months = */ new Vector2Arrow<String, String>(22976, KEY_FIELD_WIDTH, KEY_PERSIAN_MONTH),
        /* quarters = */ new Vector2Arrow<String, String>(23025, KEY_FIELD_WIDTH, KEY_QUARTER),
        /* dayPeriods = */ new Vector3Arrow<String, String, DayPeriodAltType>(23042, KEY_FIELD_WIDTH, KEY_DAY_PERIOD, KEY_DAY_PERIOD_ALT_KEY)
      ),
      /* availableFormats = */ new Vector1Arrow<String>(23139, KEY_PERSIAN_AVAILABLE_FORMAT),
      /* pluralFormats = */ new Vector2Arrow<PluralType, String>(23224, KEY_PLURAL_KEY, KEY_PERSIAN_PLURAL_FORMAT),
      /* intervalFormats = */ new Vector2Arrow<String, DateTimePatternFieldType>(23225, KEY_PERSIAN_INTERVAL_FORMAT, KEY_DATE_TIME_PATTERN_FIELD),
      /* dateFormats = */ new Vector1Arrow<FormatWidthType>(23736, KEY_FORMAT_WIDTH),
      /* timeFormats = */ new Vector1Arrow<FormatWidthType>(23741, KEY_FORMAT_WIDTH),
      /* dateTimeFormats = */ new Vector1Arrow<FormatWidthType>(23746, KEY_FORMAT_WIDTH),
      /* dateTimeFormatsAt = */ new Vector1Arrow<FormatWidthType>(23751, KEY_FORMAT_WIDTH),
      /* intervalFormatFallback = */ new FieldArrow(23756)
    ),
    /* TimeZones = */ new TimeZoneSchema(
      /* metaZones = */ new MetaZoneInfo(
        /* short_ = */ new Vector2Arrow<TimeZoneNameType, MetaZoneType>(23757, KEY_TIMEZONE_TYPE, KEY_METAZONE),
        /* long_ = */ new Vector2Arrow<TimeZoneNameType, MetaZoneType>(24232, KEY_TIMEZONE_TYPE, KEY_METAZONE)
      ),
      /* exemplarCity = */ new Vector1Arrow<String>(24707, KEY_TIMEZONE_ID),
      /* gmtFormat = */ new FieldArrow(25129),
      /* hourFormat = */ new FieldArrow(25130),
      /* gmtZeroFormat = */ new FieldArrow(25131),
      /* regionFormat = */ new FieldArrow(25132)
    ),
    /* Currencies = */ new CurrenciesSchema(
      /* displayName = */ new Vector1Arrow<CurrencyType>(25133, KEY_CURRENCY_ID),
      /* decimal = */ new Vector1Arrow<CurrencyType>(25440, KEY_CURRENCY_ID),
      /* pluralName = */ new Vector2Arrow<PluralType, CurrencyType>(25747, KEY_PLURAL_KEY, KEY_CURRENCY_ID),
      /* symbol = */ new Vector2Arrow<AltType, CurrencyType>(27584, KEY_ALT_KEY, KEY_CURRENCY_ID)
    ),
    /* Units = */ new UnitsSchema(
      /* long = */ new UnitInfo(
        /* unitPattern = */ new Vector2Arrow<PluralType, UnitType>(29727, KEY_PLURAL_KEY, KEY_UNIT_ID),
        /* displayName = */ new Vector1Arrow<UnitType>(30952, KEY_UNIT_ID),
        /* perUnitPattern = */ new Vector1Arrow<UnitType>(31157, KEY_UNIT_ID),
        /* perPattern = */ new FieldArrow(31362),
        /* timesPattern = */ new FieldArrow(31363)
      ),
      /* narrow = */ new UnitInfo(
        /* unitPattern = */ new Vector2Arrow<PluralType, UnitType>(31364, KEY_PLURAL_KEY, KEY_UNIT_ID),
        /* displayName = */ new Vector1Arrow<UnitType>(32589, KEY_UNIT_ID),
        /* perUnitPattern = */ new Vector1Arrow<UnitType>(32794, KEY_UNIT_ID),
        /* perPattern = */ new FieldArrow(32999),
        /* timesPattern = */ new FieldArrow(33000)
      ),
      /* short = */ new UnitInfo(
        /* unitPattern = */ new Vector2Arrow<PluralType, UnitType>(33001, KEY_PLURAL_KEY, KEY_UNIT_ID),
        /* displayName = */ new Vector1Arrow<UnitType>(34226, KEY_UNIT_ID),
        /* perUnitPattern = */ new Vector1Arrow<UnitType>(34431, KEY_UNIT_ID),
        /* perPattern = */ new FieldArrow(34636),
        /* timesPattern = */ new FieldArrow(34637)
      )
    ),
    /* ContextTransforms = */ new ContextTransformsSchema(
      /* contextTransforms = */ new Vector1Arrow<ContextTransformFieldType>(34638, KEY_CONTEXT_TRANSFORM_FIELD)
    )  );

}
